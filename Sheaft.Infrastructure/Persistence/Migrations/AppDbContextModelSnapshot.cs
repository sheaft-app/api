// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sheaft.Infrastructure.Persistence;

#nullable disable

namespace Sheaft.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Sheaft.Domain.AccountManagement.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 74, DateTimeKind.Unspecified).AddTicks(2272), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 74, DateTimeKind.Unspecified).AddTicks(4990), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.AgreementManagement.Agreement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CatalogIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 104, DateTimeKind.Unspecified).AddTicks(6692), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("CustomerIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("FailureReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("OrderDelayInHoursBeforeDeliveryDay")
                        .HasColumnType("int");

                    b.Property<int>("Owner")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SupplierIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 104, DateTimeKind.Unspecified).AddTicks(7160), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("Agreement", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.BatchManagement.Batch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 171, DateTimeKind.Unspecified).AddTicks(547), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateKind")
                        .HasColumnType("int");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SupplierIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 171, DateTimeKind.Unspecified).AddTicks(983), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.HasIndex("SupplierIdentifier", "Number")
                        .IsUnique();

                    b.ToTable("Batch", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.BillingManagement.Invoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CancellationReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CancelledOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 150, DateTimeKind.Unspecified).AddTicks(7689), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<DateTimeOffset?>("DueDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("PublishedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Reference")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTimeOffset?>("SentOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalOnSalePrice")
                        .HasColumnType("int");

                    b.Property<int>("TotalVatPrice")
                        .HasColumnType("int");

                    b.Property<int>("TotalWholeSalePrice")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 150, DateTimeKind.Unspecified).AddTicks(8965), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.CustomerManagement.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AccountIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 86, DateTimeKind.Unspecified).AddTicks(3834), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TradeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 86, DateTimeKind.Unspecified).AddTicks(4457), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.DocumentManagement.Document", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 171, DateTimeKind.Unspecified).AddTicks(7713), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Extension")
                        .HasColumnType("int");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SupplierIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 171, DateTimeKind.Unspecified).AddTicks(8153), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("_params")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.OrderManagement.Delivery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 113, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<DateTimeOffset?>("DeliveredOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Reference")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTimeOffset>("ScheduledAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SupplierIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("TotalOnSalePrice")
                        .HasColumnType("int");

                    b.Property<int>("TotalVatPrice")
                        .HasColumnType("int");

                    b.Property<int>("TotalWholeSalePrice")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 113, DateTimeKind.Unspecified).AddTicks(9812), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.HasIndex("SupplierIdentifier", "Reference")
                        .IsUnique()
                        .HasFilter("[Reference] IS NOT NULL");

                    b.ToTable("Delivery", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.OrderManagement.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset?>("AcceptedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("CompletedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 106, DateTimeKind.Unspecified).AddTicks(8689), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("CustomerIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("DeliveryIdentifier")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("FailureReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("FulfilledOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("InvoiceIdentifier")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("ProductsCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("PublishedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Reference")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SupplierIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("TotalOnSalePrice")
                        .HasColumnType("int");

                    b.Property<int>("TotalVatPrice")
                        .HasColumnType("int");

                    b.Property<int>("TotalWholeSalePrice")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 106, DateTimeKind.Unspecified).AddTicks(9664), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.HasIndex("SupplierIdentifier", "Reference")
                        .IsUnique()
                        .HasFilter("[Reference] IS NOT NULL");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.ProductManagement.Catalog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 99, DateTimeKind.Unspecified).AddTicks(7022), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SupplierIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 99, DateTimeKind.Unspecified).AddTicks(7652), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("Catalog", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.ProductManagement.CatalogProduct", b =>
                {
                    b.Property<long>("CatalogId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 102, DateTimeKind.Unspecified).AddTicks(6491), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 102, DateTimeKind.Unspecified).AddTicks(7209), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("CatalogId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Catalog_Products", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.ProductManagement.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 100, DateTimeKind.Unspecified).AddTicks(7028), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("ReturnableId")
                        .HasColumnType("bigint");

                    b.Property<string>("SupplierIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 100, DateTimeKind.Unspecified).AddTicks(7859), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<int>("Vat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.HasIndex("ReturnableId");

                    b.HasIndex("SupplierIdentifier", "Reference")
                        .IsUnique();

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.ProductManagement.Returnable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 103, DateTimeKind.Unspecified).AddTicks(2759), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SupplierIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 103, DateTimeKind.Unspecified).AddTicks(3439), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<int>("Vat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.HasIndex("SupplierIdentifier", "Reference")
                        .IsUnique();

                    b.ToTable("Returnable", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.RefreshTokenInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 77, DateTimeKind.Unspecified).AddTicks(6790), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<bool>("Expired")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ExpiresOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 77, DateTimeKind.Unspecified).AddTicks(7291), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("Account_RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.SupplierManagement.Supplier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AccountIdentifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 78, DateTimeKind.Unspecified).AddTicks(3328), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TradeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2022, 5, 25, 16, 31, 28, 78, DateTimeKind.Unspecified).AddTicks(4131), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("Supplier", (string)null);
                });

            modelBuilder.Entity("Sheaft.Domain.AccountManagement.Account", b =>
                {
                    b.OwnsOne("Sheaft.Domain.HashedPassword", "Password", b1 =>
                        {
                            b1.Property<long>("AccountId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Hash")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Salt")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AccountId");

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.OwnsOne("Sheaft.Domain.ResetPasswordInfo", "ResetPasswordInfo", b1 =>
                        {
                            b1.Property<long>("AccountId")
                                .HasColumnType("bigint");

                            b1.Property<DateTimeOffset>("ExpiresOn")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AccountId");

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.Navigation("Password")
                        .IsRequired();

                    b.Navigation("ResetPasswordInfo");
                });

            modelBuilder.Entity("Sheaft.Domain.AgreementManagement.Agreement", b =>
                {
                    b.OwnsMany("Sheaft.Domain.DeliveryDay", "DeliveryDays", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<long>("AgreementId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Value")
                                .HasColumnType("int")
                                .HasColumnName("DayOfWeek");

                            b1.HasKey("Id");

                            b1.HasIndex("AgreementId");

                            b1.ToTable("Agreement_DeliveryDays", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("AgreementId");
                        });

                    b.Navigation("DeliveryDays");
                });

            modelBuilder.Entity("Sheaft.Domain.BillingManagement.Invoice", b =>
                {
                    b.OwnsMany("Sheaft.Domain.BillingManagement.InvoiceCreditNote", "CreditNotes", b1 =>
                        {
                            b1.Property<long>("InvoiceId")
                                .HasColumnType("bigint");

                            b1.Property<string>("InvoiceIdentifier")
                                .HasMaxLength(12)
                                .HasColumnType("nvarchar(12)");

                            b1.HasKey("InvoiceId", "InvoiceIdentifier");

                            b1.ToTable("Invoice_CreditNotes", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsMany("Sheaft.Domain.BillingManagement.InvoiceLine", "Lines", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<string>("Identifier")
                                .IsRequired()
                                .HasMaxLength(12)
                                .HasColumnType("nvarchar(12)");

                            b1.Property<long>("InvoiceId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int");

                            b1.Property<int>("Vat")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("InvoiceId");

                            b1.ToTable("Invoice_Lines", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");

                            b1.OwnsOne("Sheaft.Domain.BillingManagement.InvoiceDelivery", "Delivery", b2 =>
                                {
                                    b2.Property<long>("InvoiceLineId")
                                        .HasColumnType("bigint");

                                    b2.Property<DateTimeOffset>("DeliveredOn")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("Reference")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.HasKey("InvoiceLineId");

                                    b2.ToTable("Invoice_Lines");

                                    b2.WithOwner()
                                        .HasForeignKey("InvoiceLineId");
                                });

                            b1.OwnsOne("Sheaft.Domain.OrderManagement.DeliveryOrder", "Order", b2 =>
                                {
                                    b2.Property<long>("InvoiceLineId")
                                        .HasColumnType("bigint");

                                    b2.Property<DateTimeOffset>("PublishedOn")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("Reference")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.HasKey("InvoiceLineId");

                                    b2.ToTable("Invoice_Lines");

                                    b2.WithOwner()
                                        .HasForeignKey("InvoiceLineId");
                                });

                            b1.OwnsOne("Sheaft.Domain.LinePrice", "PriceInfo", b2 =>
                                {
                                    b2.Property<long>("InvoiceLineId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("OnSalePrice")
                                        .HasColumnType("int");

                                    b2.Property<int>("UnitPrice")
                                        .HasColumnType("int");

                                    b2.Property<int>("VatPrice")
                                        .HasColumnType("int");

                                    b2.Property<int>("WholeSalePrice")
                                        .HasColumnType("int");

                                    b2.HasKey("InvoiceLineId");

                                    b2.ToTable("Invoice_Lines");

                                    b2.WithOwner()
                                        .HasForeignKey("InvoiceLineId");
                                });

                            b1.Navigation("Delivery")
                                .IsRequired();

                            b1.Navigation("Order")
                                .IsRequired();

                            b1.Navigation("PriceInfo")
                                .IsRequired();
                        });

                    b.OwnsMany("Sheaft.Domain.BillingManagement.InvoicePayment", "Payments", b1 =>
                        {
                            b1.Property<long>("InvoiceId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Reference")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<int>("Kind")
                                .HasColumnType("int");

                            b1.Property<DateTimeOffset>("PaymentDate")
                                .HasColumnType("datetimeoffset");

                            b1.HasKey("InvoiceId", "Reference");

                            b1.ToTable("Invoice_Payments", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsOne("Sheaft.Domain.CustomerBillingInformation", "Customer", b1 =>
                        {
                            b1.Property<long>("InvoiceId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(254)
                                .HasColumnType("nvarchar(254)");

                            b1.Property<string>("Identifier")
                                .IsRequired()
                                .HasMaxLength(12)
                                .HasColumnType("nvarchar(12)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Siret")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("nvarchar(14)");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoice");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");

                            b1.OwnsOne("Sheaft.Domain.Address", "Address", b2 =>
                                {
                                    b2.Property<long>("CustomerBillingInformationInvoiceId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("City")
                                        .IsRequired()
                                        .HasMaxLength(80)
                                        .HasColumnType("nvarchar(80)");

                                    b2.Property<string>("Complement")
                                        .HasMaxLength(150)
                                        .HasColumnType("nvarchar(150)");

                                    b2.Property<string>("Postcode")
                                        .IsRequired()
                                        .HasMaxLength(5)
                                        .HasColumnType("nvarchar(5)");

                                    b2.Property<string>("Street")
                                        .IsRequired()
                                        .HasMaxLength(200)
                                        .HasColumnType("nvarchar(200)");

                                    b2.HasKey("CustomerBillingInformationInvoiceId");

                                    b2.ToTable("Invoice");

                                    b2.WithOwner()
                                        .HasForeignKey("CustomerBillingInformationInvoiceId");
                                });

                            b1.Navigation("Address")
                                .IsRequired();
                        });

                    b.OwnsOne("Sheaft.Domain.SupplierBillingInformation", "Supplier", b1 =>
                        {
                            b1.Property<long>("InvoiceId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(254)
                                .HasColumnType("nvarchar(254)");

                            b1.Property<string>("Identifier")
                                .IsRequired()
                                .HasMaxLength(12)
                                .HasColumnType("nvarchar(12)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Siret")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("nvarchar(14)");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoice");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");

                            b1.OwnsOne("Sheaft.Domain.Address", "Address", b2 =>
                                {
                                    b2.Property<long>("SupplierBillingInformationInvoiceId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("City")
                                        .IsRequired()
                                        .HasMaxLength(80)
                                        .HasColumnType("nvarchar(80)");

                                    b2.Property<string>("Complement")
                                        .HasMaxLength(150)
                                        .HasColumnType("nvarchar(150)");

                                    b2.Property<string>("Postcode")
                                        .IsRequired()
                                        .HasMaxLength(5)
                                        .HasColumnType("nvarchar(5)");

                                    b2.Property<string>("Street")
                                        .IsRequired()
                                        .HasMaxLength(200)
                                        .HasColumnType("nvarchar(200)");

                                    b2.HasKey("SupplierBillingInformationInvoiceId");

                                    b2.ToTable("Invoice");

                                    b2.WithOwner()
                                        .HasForeignKey("SupplierBillingInformationInvoiceId");
                                });

                            b1.Navigation("Address")
                                .IsRequired();
                        });

                    b.Navigation("CreditNotes");

                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Lines");

                    b.Navigation("Payments");

                    b.Navigation("Supplier")
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.CustomerManagement.Customer", b =>
                {
                    b.OwnsOne("Sheaft.Domain.BillingAddress", "BillingAddress", b1 =>
                        {
                            b1.Property<long>("CustomerId")
                                .HasColumnType("bigint");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.Property<string>("Complement")
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(254)
                                .HasColumnType("nvarchar(254)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Postcode")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("Sheaft.Domain.DeliveryAddress", "DeliveryAddress", b1 =>
                        {
                            b1.Property<long>("CustomerId")
                                .HasColumnType("bigint");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.Property<string>("Complement")
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(254)
                                .HasColumnType("nvarchar(254)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Postcode")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("Sheaft.Domain.Legal", "Legal", b1 =>
                        {
                            b1.Property<long>("CustomerId")
                                .HasColumnType("bigint");

                            b1.Property<string>("CorporateName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Siret")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("nvarchar(14)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");

                            b1.OwnsOne("Sheaft.Domain.LegalAddress", "Address", b2 =>
                                {
                                    b2.Property<long>("LegalCustomerId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("City")
                                        .IsRequired()
                                        .HasMaxLength(80)
                                        .HasColumnType("nvarchar(80)");

                                    b2.Property<string>("Complement")
                                        .HasMaxLength(150)
                                        .HasColumnType("nvarchar(150)");

                                    b2.Property<string>("Postcode")
                                        .IsRequired()
                                        .HasMaxLength(5)
                                        .HasColumnType("nvarchar(5)");

                                    b2.Property<string>("Street")
                                        .IsRequired()
                                        .HasMaxLength(200)
                                        .HasColumnType("nvarchar(200)");

                                    b2.HasKey("LegalCustomerId");

                                    b2.ToTable("Customer");

                                    b2.WithOwner()
                                        .HasForeignKey("LegalCustomerId");
                                });

                            b1.Navigation("Address")
                                .IsRequired();
                        });

                    b.Navigation("BillingAddress")
                        .IsRequired();

                    b.Navigation("DeliveryAddress")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.OrderManagement.Delivery", b =>
                {
                    b.OwnsOne("Sheaft.Domain.DeliveryAddress", "Address", b1 =>
                        {
                            b1.Property<long>("DeliveryId")
                                .HasColumnType("bigint");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.Property<string>("Complement")
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(254)
                                .HasColumnType("nvarchar(254)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Postcode")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.HasKey("DeliveryId");

                            b1.ToTable("Delivery");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");
                        });

                    b.OwnsMany("Sheaft.Domain.OrderManagement.DeliveryLine", "Adjustments", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<long>("DeliveryId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Identifier")
                                .IsRequired()
                                .HasMaxLength(12)
                                .HasColumnType("nvarchar(12)");

                            b1.Property<int>("LineKind")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int");

                            b1.Property<string>("Reference")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<int>("Vat")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("DeliveryId");

                            b1.ToTable("Delivery_Adjustments", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");

                            b1.OwnsMany("Sheaft.Domain.OrderManagement.DeliveryBatch", "Batches", b2 =>
                                {
                                    b2.Property<long>("DeliveryAdjustmentId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("BatchIdentifier")
                                        .HasMaxLength(12)
                                        .HasColumnType("nvarchar(12)");

                                    b2.HasKey("DeliveryAdjustmentId", "BatchIdentifier");

                                    b2.ToTable("DeliveryAdjustment_Batches", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("DeliveryAdjustmentId");
                                });

                            b1.OwnsOne("Sheaft.Domain.OrderManagement.DeliveryOrder", "Order", b2 =>
                                {
                                    b2.Property<long>("DeliveryLineId")
                                        .HasColumnType("bigint");

                                    b2.Property<DateTimeOffset>("PublishedOn")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("Reference")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.HasKey("DeliveryLineId");

                                    b2.ToTable("Delivery_Adjustments");

                                    b2.WithOwner()
                                        .HasForeignKey("DeliveryLineId");
                                });

                            b1.OwnsOne("Sheaft.Domain.LinePrice", "PriceInfo", b2 =>
                                {
                                    b2.Property<long>("DeliveryLineId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("OnSalePrice")
                                        .HasColumnType("int");

                                    b2.Property<int>("UnitPrice")
                                        .HasColumnType("int");

                                    b2.Property<int>("VatPrice")
                                        .HasColumnType("int");

                                    b2.Property<int>("WholeSalePrice")
                                        .HasColumnType("int");

                                    b2.HasKey("DeliveryLineId");

                                    b2.ToTable("Delivery_Adjustments");

                                    b2.WithOwner()
                                        .HasForeignKey("DeliveryLineId");
                                });

                            b1.Navigation("Batches");

                            b1.Navigation("Order");

                            b1.Navigation("PriceInfo")
                                .IsRequired();
                        });

                    b.OwnsMany("Sheaft.Domain.OrderManagement.DeliveryLine", "Lines", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<long>("DeliveryId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Identifier")
                                .IsRequired()
                                .HasMaxLength(12)
                                .HasColumnType("nvarchar(12)");

                            b1.Property<int>("LineKind")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int");

                            b1.Property<string>("Reference")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<int>("Vat")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("DeliveryId");

                            b1.ToTable("Delivery_Lines", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");

                            b1.OwnsMany("Sheaft.Domain.OrderManagement.DeliveryBatch", "Batches", b2 =>
                                {
                                    b2.Property<long>("DeliveryLineId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("BatchIdentifier")
                                        .HasMaxLength(12)
                                        .HasColumnType("nvarchar(12)");

                                    b2.HasKey("DeliveryLineId", "BatchIdentifier");

                                    b2.ToTable("DeliveryLine_Batches", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("DeliveryLineId");
                                });

                            b1.OwnsOne("Sheaft.Domain.OrderManagement.DeliveryOrder", "Order", b2 =>
                                {
                                    b2.Property<long>("DeliveryLineId")
                                        .HasColumnType("bigint");

                                    b2.Property<DateTimeOffset>("PublishedOn")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("Reference")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.HasKey("DeliveryLineId");

                                    b2.ToTable("Delivery_Lines");

                                    b2.WithOwner()
                                        .HasForeignKey("DeliveryLineId");
                                });

                            b1.OwnsOne("Sheaft.Domain.LinePrice", "PriceInfo", b2 =>
                                {
                                    b2.Property<long>("DeliveryLineId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("OnSalePrice")
                                        .HasColumnType("int");

                                    b2.Property<int>("UnitPrice")
                                        .HasColumnType("int");

                                    b2.Property<int>("VatPrice")
                                        .HasColumnType("int");

                                    b2.Property<int>("WholeSalePrice")
                                        .HasColumnType("int");

                                    b2.HasKey("DeliveryLineId");

                                    b2.ToTable("Delivery_Lines");

                                    b2.WithOwner()
                                        .HasForeignKey("DeliveryLineId");
                                });

                            b1.Navigation("Batches");

                            b1.Navigation("Order");

                            b1.Navigation("PriceInfo")
                                .IsRequired();
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Adjustments");

                    b.Navigation("Lines");
                });

            modelBuilder.Entity("Sheaft.Domain.OrderManagement.Order", b =>
                {
                    b.OwnsMany("Sheaft.Domain.OrderManagement.OrderLine", "Lines", b1 =>
                        {
                            b1.Property<long>("OrderId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Identifier")
                                .HasMaxLength(12)
                                .HasColumnType("nvarchar(12)");

                            b1.Property<int>("LineKind")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int");

                            b1.Property<string>("Reference")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<int>("Vat")
                                .HasColumnType("int");

                            b1.HasKey("OrderId", "Identifier");

                            b1.ToTable("Order_Lines", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OrderId");

                            b1.OwnsOne("Sheaft.Domain.LinePrice", "PriceInfo", b2 =>
                                {
                                    b2.Property<long>("OrderLineOrderId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("OrderLineIdentifier")
                                        .HasColumnType("nvarchar(12)");

                                    b2.Property<int>("OnSalePrice")
                                        .HasColumnType("int");

                                    b2.Property<int>("UnitPrice")
                                        .HasColumnType("int");

                                    b2.Property<int>("VatPrice")
                                        .HasColumnType("int");

                                    b2.Property<int>("WholeSalePrice")
                                        .HasColumnType("int");

                                    b2.HasKey("OrderLineOrderId", "OrderLineIdentifier");

                                    b2.ToTable("Order_Lines");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderLineOrderId", "OrderLineIdentifier");
                                });

                            b1.Navigation("PriceInfo")
                                .IsRequired();
                        });

                    b.Navigation("Lines");
                });

            modelBuilder.Entity("Sheaft.Domain.ProductManagement.CatalogProduct", b =>
                {
                    b.HasOne("Sheaft.Domain.ProductManagement.Catalog", null)
                        .WithMany("Products")
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sheaft.Domain.ProductManagement.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Sheaft.Domain.ProductManagement.Product", b =>
                {
                    b.HasOne("Sheaft.Domain.ProductManagement.Returnable", "Returnable")
                        .WithMany()
                        .HasForeignKey("ReturnableId");

                    b.Navigation("Returnable");
                });

            modelBuilder.Entity("Sheaft.Domain.RefreshTokenInfo", b =>
                {
                    b.HasOne("Sheaft.Domain.AccountManagement.Account", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.SupplierManagement.Supplier", b =>
                {
                    b.OwnsOne("Sheaft.Domain.ShippingAddress", "ShippingAddress", b1 =>
                        {
                            b1.Property<long>("SupplierId")
                                .HasColumnType("bigint");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.Property<string>("Complement")
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(254)
                                .HasColumnType("nvarchar(254)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Postcode")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.HasKey("SupplierId");

                            b1.ToTable("Supplier");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");
                        });

                    b.OwnsOne("Sheaft.Domain.BillingAddress", "BillingAddress", b1 =>
                        {
                            b1.Property<long>("SupplierId")
                                .HasColumnType("bigint");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)");

                            b1.Property<string>("Complement")
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(254)
                                .HasColumnType("nvarchar(254)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Postcode")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.HasKey("SupplierId");

                            b1.ToTable("Supplier");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");
                        });

                    b.OwnsOne("Sheaft.Domain.Legal", "Legal", b1 =>
                        {
                            b1.Property<long>("SupplierId")
                                .HasColumnType("bigint");

                            b1.Property<string>("CorporateName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Siret")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("nvarchar(14)");

                            b1.HasKey("SupplierId");

                            b1.ToTable("Supplier");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");

                            b1.OwnsOne("Sheaft.Domain.LegalAddress", "Address", b2 =>
                                {
                                    b2.Property<long>("LegalSupplierId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("City")
                                        .IsRequired()
                                        .HasMaxLength(80)
                                        .HasColumnType("nvarchar(80)");

                                    b2.Property<string>("Complement")
                                        .HasMaxLength(150)
                                        .HasColumnType("nvarchar(150)");

                                    b2.Property<string>("Postcode")
                                        .IsRequired()
                                        .HasMaxLength(5)
                                        .HasColumnType("nvarchar(5)");

                                    b2.Property<string>("Street")
                                        .IsRequired()
                                        .HasMaxLength(200)
                                        .HasColumnType("nvarchar(200)");

                                    b2.HasKey("LegalSupplierId");

                                    b2.ToTable("Supplier");

                                    b2.WithOwner()
                                        .HasForeignKey("LegalSupplierId");
                                });

                            b1.Navigation("Address")
                                .IsRequired();
                        });

                    b.Navigation("BillingAddress")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("ShippingAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.AccountManagement.Account", b =>
                {
                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("Sheaft.Domain.ProductManagement.Catalog", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
