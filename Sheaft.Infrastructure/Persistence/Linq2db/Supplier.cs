// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("Supplier")]
	public class Supplier
	{
		[Column("Id"                        , CanBeNull = false, IsPrimaryKey = true)] public string         Id                        { get; set; } = null!; // nvarchar(12)
		[Column("TradeName"                 , CanBeNull = false                     )] public string         TradeName                 { get; set; } = null!; // nvarchar(100)
		[Column("Email"                     , CanBeNull = false                     )] public string         Email                     { get; set; } = null!; // nvarchar(254)
		[Column("Phone"                     , CanBeNull = false                     )] public string         Phone                     { get; set; } = null!; // nvarchar(12)
		[Column("Legal_CorporateName"       , CanBeNull = false                     )] public string         LegalCorporateName        { get; set; } = null!; // nvarchar(100)
		[Column("Legal_Siret"               , CanBeNull = false                     )] public string         LegalSiret                { get; set; } = null!; // nvarchar(14)
		[Column("Legal_Address_Street"      , CanBeNull = false                     )] public string         LegalAddressStreet        { get; set; } = null!; // nvarchar(200)
		[Column("Legal_Address_Complement"                                          )] public string?        LegalAddressComplement    { get; set; } // nvarchar(150)
		[Column("Legal_Address_Postcode"    , CanBeNull = false                     )] public string         LegalAddressPostcode      { get; set; } = null!; // nvarchar(5)
		[Column("Legal_Address_City"        , CanBeNull = false                     )] public string         LegalAddressCity          { get; set; } = null!; // nvarchar(80)
		[Column("ShippingAddress_Name"      , CanBeNull = false                     )] public string         ShippingAddressName       { get; set; } = null!; // nvarchar(100)
		[Column("ShippingAddress_Email"     , CanBeNull = false                     )] public string         ShippingAddressEmail      { get; set; } = null!; // nvarchar(254)
		[Column("ShippingAddress_Street"    , CanBeNull = false                     )] public string         ShippingAddressStreet     { get; set; } = null!; // nvarchar(200)
		[Column("ShippingAddress_Complement"                                        )] public string?        ShippingAddressComplement { get; set; } // nvarchar(150)
		[Column("ShippingAddress_Postcode"  , CanBeNull = false                     )] public string         ShippingAddressPostcode   { get; set; } = null!; // nvarchar(5)
		[Column("ShippingAddress_City"      , CanBeNull = false                     )] public string         ShippingAddressCity       { get; set; } = null!; // nvarchar(80)
		[Column("BillingAddress_Name"       , CanBeNull = false                     )] public string         BillingAddressName        { get; set; } = null!; // nvarchar(100)
		[Column("BillingAddress_Email"      , CanBeNull = false                     )] public string         BillingAddressEmail       { get; set; } = null!; // nvarchar(254)
		[Column("BillingAddress_Street"     , CanBeNull = false                     )] public string         BillingAddressStreet      { get; set; } = null!; // nvarchar(200)
		[Column("BillingAddress_Complement"                                         )] public string?        BillingAddressComplement  { get; set; } // nvarchar(150)
		[Column("BillingAddress_Postcode"   , CanBeNull = false                     )] public string         BillingAddressPostcode    { get; set; } = null!; // nvarchar(5)
		[Column("BillingAddress_City"       , CanBeNull = false                     )] public string         BillingAddressCity        { get; set; } = null!; // nvarchar(80)
		[Column("AccountId"                 , CanBeNull = false                     )] public string         AccountId                 { get; set; } = null!; // nvarchar(12)
		[Column("CreatedOn"                                                         )] public DateTimeOffset CreatedOn                 { get; set; } // datetimeoffset(7)
		[Column("UpdatedOn"                                                         )] public DateTimeOffset UpdatedOn                 { get; set; } // datetimeoffset(7)

		#region Associations
		/// <summary>
		/// FK_Product_Supplier_SupplierId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Product.SupplierId))]
		public IEnumerable<Product> ProductSupplierIds { get; set; } = null!;

		/// <summary>
		/// FK_Supplier_Account_AccountId
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(AccountId), OtherKey = nameof(DataModel.Account.Id))]
		public Account Account { get; set; } = null!;

		/// <summary>
		/// FK_Batch_Supplier_SupplierId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Batch.SupplierId))]
		public IEnumerable<Batch> BatchSupplierIds { get; set; } = null!;

		/// <summary>
		/// FK_Catalog_Supplier_SupplierId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Catalog.SupplierId))]
		public IEnumerable<Catalog> CatalogSupplierIds { get; set; } = null!;

		/// <summary>
		/// FK_Delivery_Supplier_SupplierId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Delivery.SupplierId))]
		public IEnumerable<Delivery> DeliverySupplierIds { get; set; } = null!;

		/// <summary>
		/// FK_Order_Supplier_SupplierId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Order.SupplierId))]
		public IEnumerable<Order> OrderSupplierIds { get; set; } = null!;

		/// <summary>
		/// FK_Returnable_Supplier_SupplierId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Returnable.SupplierId))]
		public IEnumerable<Returnable> ReturnableSupplierIds { get; set; } = null!;

		/// <summary>
		/// FK_Agreement_Supplier_SupplierId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Agreement.SupplierId))]
		public IEnumerable<Agreement> AgreementSupplierIds { get; set; } = null!;
		#endregion
	}
}
