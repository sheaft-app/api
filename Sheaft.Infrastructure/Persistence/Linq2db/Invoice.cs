// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("Invoice")]
	public class Invoice
	{
		[Column("Id"                         , CanBeNull = false, IsPrimaryKey = true)] public string          Id                        { get; set; } = null!; // nvarchar(12)
		[Column("CreatedOn"                                                          )] public DateTimeOffset  CreatedOn                 { get; set; } // datetimeoffset(7)
		[Column("UpdatedOn"                                                          )] public DateTimeOffset  UpdatedOn                 { get; set; } // datetimeoffset(7)
		[Column("Reference"                                                          )] public string?         Reference                 { get; set; } // nvarchar(20)
		[Column("DueDate"                                                            )] public DateTimeOffset? DueDate                   { get; set; } // datetimeoffset(7)
		[Column("Status"                                                             )] public int             Status                    { get; set; } // int
		[Column("Kind"                                                               )] public int             Kind                      { get; set; } // int
		[Column("PublishedOn"                                                        )] public DateTimeOffset? PublishedOn               { get; set; } // datetimeoffset(7)
		[Column("CancelledOn"                                                        )] public DateTimeOffset? CancelledOn               { get; set; } // datetimeoffset(7)
		[Column("SentOn"                                                             )] public DateTimeOffset? SentOn                    { get; set; } // datetimeoffset(7)
		[Column("Comment"                                                            )] public string?         Comment                   { get; set; } // nvarchar(max)
		[Column("CancellationReason"                                                 )] public string?         CancellationReason        { get; set; } // nvarchar(max)
		[Column("TotalWholeSalePrice"                                                )] public decimal         TotalWholeSalePrice       { get; set; } // decimal(18, 2)
		[Column("TotalVatPrice"                                                      )] public decimal         TotalVatPrice             { get; set; } // decimal(18, 2)
		[Column("TotalOnSalePrice"                                                   )] public decimal         TotalOnSalePrice          { get; set; } // decimal(18, 2)
		[Column("Customer_Identifier"        , CanBeNull = false                     )] public string          CustomerIdentifier        { get; set; } = null!; // nvarchar(12)
		[Column("Customer_Name"              , CanBeNull = false                     )] public string          CustomerName              { get; set; } = null!; // nvarchar(100)
		[Column("Customer_Email"             , CanBeNull = false                     )] public string          CustomerEmail             { get; set; } = null!; // nvarchar(254)
		[Column("Customer_Siret"             , CanBeNull = false                     )] public string          CustomerSiret             { get; set; } = null!; // nvarchar(14)
		[Column("Customer_Address_Street"    , CanBeNull = false                     )] public string          CustomerAddressStreet     { get; set; } = null!; // nvarchar(200)
		[Column("Customer_Address_Complement"                                        )] public string?         CustomerAddressComplement { get; set; } // nvarchar(150)
		[Column("Customer_Address_Postcode"  , CanBeNull = false                     )] public string          CustomerAddressPostcode   { get; set; } = null!; // nvarchar(5)
		[Column("Customer_Address_City"      , CanBeNull = false                     )] public string          CustomerAddressCity       { get; set; } = null!; // nvarchar(80)
		[Column("Supplier_Identifier"        , CanBeNull = false                     )] public string          SupplierIdentifier        { get; set; } = null!; // nvarchar(12)
		[Column("Supplier_Name"              , CanBeNull = false                     )] public string          SupplierName              { get; set; } = null!; // nvarchar(100)
		[Column("Supplier_Email"             , CanBeNull = false                     )] public string          SupplierEmail             { get; set; } = null!; // nvarchar(254)
		[Column("Supplier_Siret"             , CanBeNull = false                     )] public string          SupplierSiret             { get; set; } = null!; // nvarchar(14)
		[Column("Supplier_Address_Street"    , CanBeNull = false                     )] public string          SupplierAddressStreet     { get; set; } = null!; // nvarchar(200)
		[Column("Supplier_Address_Complement"                                        )] public string?         SupplierAddressComplement { get; set; } // nvarchar(150)
		[Column("Supplier_Address_Postcode"  , CanBeNull = false                     )] public string          SupplierAddressPostcode   { get; set; } = null!; // nvarchar(5)
		[Column("Supplier_Address_City"      , CanBeNull = false                     )] public string          SupplierAddressCity       { get; set; } = null!; // nvarchar(80)
		[Column("InvoiceId"                                                          )] public string?         InvoiceId                 { get; set; } // nvarchar(12)

		#region Associations
		/// <summary>
		/// FK_Invoice_Invoice_InvoiceId
		/// </summary>
		[Association(ThisKey = nameof(InvoiceId), OtherKey = nameof(Id))]
		public Invoice? Invoice1 { get; set; }

		/// <summary>
		/// FK_Invoice_Invoice_InvoiceId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(InvoiceId))]
		public IEnumerable<Invoice> InvoiceIds { get; set; } = null!;

		/// <summary>
		/// FK_Invoice_Lines_Invoice_InvoiceId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(InvoiceLine.InvoiceId))]
		public IEnumerable<InvoiceLine> LinesInvoiceIds { get; set; } = null!;

		/// <summary>
		/// FK_Invoice_Payments_Invoice_InvoiceId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(InvoicePayment.InvoiceId))]
		public IEnumerable<InvoicePayment> PaymentsInvoiceIds { get; set; } = null!;
		#endregion
	}
}
