// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("Account")]
	public class Account
	{
		[Column("Id"                         , CanBeNull = false, IsPrimaryKey = true)] public string          Id                         { get; set; } = null!; // nvarchar(12)
		[Column("Username"                   , CanBeNull = false                     )] public string          Username                   { get; set; } = null!; // nvarchar(254)
		[Column("Firstname"                  , CanBeNull = false                     )] public string          Firstname                  { get; set; } = null!; // nvarchar(30)
		[Column("Lastname"                   , CanBeNull = false                     )] public string          Lastname                   { get; set; } = null!; // nvarchar(50)
		[Column("Email"                      , CanBeNull = false                     )] public string          Email                      { get; set; } = null!; // nvarchar(254)
		[Column("Password_Hash"              , CanBeNull = false                     )] public string          PasswordHash               { get; set; } = null!; // nvarchar(max)
		[Column("Password_Salt"              , CanBeNull = false                     )] public string          PasswordSalt               { get; set; } = null!; // nvarchar(max)
		[Column("CreatedOn"                                                          )] public DateTimeOffset  CreatedOn                  { get; set; } // datetimeoffset(7)
		[Column("UpdatedOn"                                                          )] public DateTimeOffset  UpdatedOn                  { get; set; } // datetimeoffset(7)
		[Column("ResetPasswordInfo_Token"                                            )] public string?         ResetPasswordInfoToken     { get; set; } // nvarchar(max)
		[Column("ResetPasswordInfo_CreatedOn"                                        )] public DateTimeOffset? ResetPasswordInfoCreatedOn { get; set; } // datetimeoffset(7)
		[Column("ResetPasswordInfo_ExpiresOn"                                        )] public DateTimeOffset? ResetPasswordInfoExpiresOn { get; set; } // datetimeoffset(7)

		#region Associations
		/// <summary>
		/// FK_Account_RefreshTokens_Account_AccountId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(AccountRefreshToken.AccountId))]
		public IEnumerable<AccountRefreshToken> RefreshTokensAccountIds { get; set; } = null!;

		/// <summary>
		/// FK_Customer_Account_AccountId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Customer.AccountId))]
		public IEnumerable<Customer> CustomerAccountIds { get; set; } = null!;

		/// <summary>
		/// FK_Supplier_Account_AccountId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Supplier.AccountId))]
		public IEnumerable<Supplier> SupplierAccountIds { get; set; } = null!;
		#endregion
	}
}
