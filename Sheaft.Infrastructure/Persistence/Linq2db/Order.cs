// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("Order")]
	public class Order
	{
		[Column("Id"                 , CanBeNull = false, IsPrimaryKey = true)] public string          Id                  { get; set; } = null!; // nvarchar(12)
		[Column("Reference"                                                  )] public string?         Reference           { get; set; } // nvarchar(20)
		[Column("TotalWholeSalePrice"                                        )] public decimal         TotalWholeSalePrice { get; set; } // decimal(18, 2)
		[Column("TotalVatPrice"                                              )] public decimal         TotalVatPrice       { get; set; } // decimal(18, 2)
		[Column("TotalOnSalePrice"                                           )] public decimal         TotalOnSalePrice    { get; set; } // decimal(18, 2)
		[Column("Status"                                                     )] public int             Status              { get; set; } // int
		[Column("PublishedOn"                                                )] public DateTimeOffset? PublishedOn         { get; set; } // datetimeoffset(7)
		[Column("FulfilledOn"                                                )] public DateTimeOffset? FulfilledOn         { get; set; } // datetimeoffset(7)
		[Column("AcceptedOn"                                                 )] public DateTimeOffset? AcceptedOn          { get; set; } // datetimeoffset(7)
		[Column("CompletedOn"                                                )] public DateTimeOffset? CompletedOn         { get; set; } // datetimeoffset(7)
		[Column("ProductsCount"                                              )] public int             ProductsCount       { get; set; } // int
		[Column("FailureReason"                                              )] public string?         FailureReason       { get; set; } // nvarchar(max)
		[Column("CustomerId"         , CanBeNull = false                     )] public string          CustomerId          { get; set; } = null!; // nvarchar(12)
		[Column("SupplierId"         , CanBeNull = false                     )] public string          SupplierId          { get; set; } = null!; // nvarchar(12)
		[Column("InvoiceId"                                                  )] public string?         InvoiceId           { get; set; } // nvarchar(12)
		[Column("DeliveryId"                                                 )] public string?         DeliveryId          { get; set; } // nvarchar(12)
		[Column("CreatedOn"                                                  )] public DateTimeOffset  CreatedOn           { get; set; } // datetimeoffset(7)
		[Column("UpdatedOn"                                                  )] public DateTimeOffset  UpdatedOn           { get; set; } // datetimeoffset(7)

		#region Associations
		/// <summary>
		/// FK_Order_Lines_Order_OrderId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(OrderLine.OrderId))]
		public IEnumerable<OrderLine> LinesOrderIds { get; set; } = null!;

		/// <summary>
		/// FK_Order_Customer_CustomerId
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(CustomerId), OtherKey = nameof(DataModel.Customer.Id))]
		public Customer Customer { get; set; } = null!;

		/// <summary>
		/// FK_Order_Supplier_SupplierId
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(SupplierId), OtherKey = nameof(DataModel.Supplier.Id))]
		public Supplier Supplier { get; set; } = null!;
		#endregion
	}
}
