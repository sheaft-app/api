// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sheaft.Infrastructure;

namespace Sheaft.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200725182347_InitDatabase")]
    partial class InitDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sheaft.Domain.Models.Agreement", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DeliveryModeUid")
                        .HasColumnType("bigint");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("StoreUid")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Uid");

                    b.HasIndex("DeliveryModeUid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("StoreUid");

                    b.HasIndex("Uid", "Id", "StoreUid", "DeliveryModeUid", "CreatedOn");

                    b.ToTable("Agreements");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Company", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AppearInBusinessSearchResults")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Siret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("VatIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Uid", "Id", "CreatedOn");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.CompanyTag", b =>
                {
                    b.Property<long>("CompanyUid")
                        .HasColumnType("bigint");

                    b.Property<long>("TagUid")
                        .HasColumnType("bigint");

                    b.HasKey("CompanyUid", "TagUid");

                    b.HasIndex("TagUid");

                    b.ToTable("CompanyTags");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.DeliveryMode", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<int>("LockOrderHoursBeforeDelivery")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProducerUid")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Uid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProducerUid");

                    b.HasIndex("Uid", "Id", "ProducerUid", "CreatedOn");

                    b.ToTable("DeliveryModes");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Department", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ConsumersCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("LevelUid")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ProducersCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("RequiredProducers")
                        .HasColumnType("int")
                        .HasDefaultValue(1000);

                    b.Property<long>("RegionUid")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("StoresCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Uid");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("LevelUid");

                    b.HasIndex("RegionUid");

                    b.HasIndex("Uid", "Id", "RegionUid", "LevelUid");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Job", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<string>("Command")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CompletedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Queue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("Retried")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("StartedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("UserUid")
                        .HasColumnType("bigint");

                    b.HasKey("Uid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserUid");

                    b.HasIndex("Uid", "Id", "UserUid", "CreatedOn");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Level", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("RequiredPoints")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Uid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("Uid", "Id", "CreatedOn");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Notification", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("GroupUid")
                        .HasColumnType("bigint");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("Unread")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("UserUid")
                        .HasColumnType("bigint");

                    b.HasKey("Uid");

                    b.HasIndex("GroupUid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserUid");

                    b.HasIndex("Uid", "Id", "UserUid", "GroupUid", "CreatedOn");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Packaging", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OnSalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<long>("ProducerUid")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("VatPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("WholeSalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Uid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProducerUid");

                    b.HasIndex("Uid", "Id", "CreatedOn");

                    b.ToTable("Packagings");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Product", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OnSalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("OnSalePricePerUnit")
                        .HasColumnType("decimal(10,2)");

                    b.Property<long?>("PackagingUid")
                        .HasColumnType("bigint");

                    b.Property<long>("ProducerUid")
                        .HasColumnType("bigint");

                    b.Property<decimal>("QuantityPerUnit")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("RatingsCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("VatPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("VatPricePerUnit")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("WholeSalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("WholeSalePricePerUnit")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Uid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("PackagingUid");

                    b.HasIndex("ProducerUid");

                    b.HasIndex("ProducerUid", "Reference")
                        .IsUnique();

                    b.HasIndex("Uid", "Id", "ProducerUid", "PackagingUid", "CreatedOn");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.ProductTag", b =>
                {
                    b.Property<long>("ProductUid")
                        .HasColumnType("bigint");

                    b.Property<long>("TagUid")
                        .HasColumnType("bigint");

                    b.HasKey("ProductUid", "TagUid");

                    b.HasIndex("TagUid");

                    b.ToTable("ProductTags");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.PurchaseOrder", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LinesCount")
                        .HasColumnType("int");

                    b.Property<int>("ProductsCount")
                        .HasColumnType("int");

                    b.Property<long>("PurchaseOrderSenderUid")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchaseOrderVendorUid")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalOnSalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalVatPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalWholeSalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Uid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("PurchaseOrderSenderUid")
                        .IsUnique();

                    b.HasIndex("PurchaseOrderVendorUid")
                        .IsUnique();

                    b.HasIndex("PurchaseOrderVendorUid", "Reference")
                        .IsUnique();

                    b.HasIndex("Uid", "Id", "PurchaseOrderVendorUid", "PurchaseOrderSenderUid", "CreatedOn");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.PurchaseOrderProduct", b =>
                {
                    b.Property<long>("PurchaseOrderUid")
                        .HasColumnType("bigint");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackagingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PackagingOnSalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("PackagingVat")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("PackagingVatPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("PackagingWholeSalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalOnSalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalVatPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("TotalWeight")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalWholeSalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("UnitOnSalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("UnitVatPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("UnitWeight")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("UnitWholeSalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PurchaseOrderUid", "Id");

                    b.ToTable("PurchaseOrderProducts");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.PurchaseOrderSender", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.HasIndex("Id");

                    b.ToTable("PurchaseOrderSenders");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.PurchaseOrderVendor", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.HasIndex("Id");

                    b.ToTable("PurchaseOrderVendors");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.QuickOrder", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("UserUid")
                        .HasColumnType("bigint");

                    b.HasKey("Uid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserUid");

                    b.HasIndex("Uid", "Id", "UserUid", "CreatedOn");

                    b.ToTable("QuickOrders");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.QuickOrderProduct", b =>
                {
                    b.Property<long>("QuickOrderUid")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductUid")
                        .HasColumnType("bigint");

                    b.Property<int?>("Quantity")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.HasKey("QuickOrderUid", "ProductUid");

                    b.HasIndex("ProductUid");

                    b.ToTable("QuickOrderProducts");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Rating", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ProductUid")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("UserUid")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Uid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProductUid");

                    b.HasIndex("UserUid");

                    b.HasIndex("Uid", "Id", "ProductUid", "UserUid", "CreatedOn");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Region", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ConsumersCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ProducersCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("RequiredProducers")
                        .HasColumnType("int")
                        .HasDefaultValue(1000);

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("StoresCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Uid");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Uid", "Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Reward", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DepartmentUid")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LevelUid")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WinnerUid")
                        .HasColumnType("bigint");

                    b.HasKey("Uid");

                    b.HasIndex("DepartmentUid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("LevelUid");

                    b.HasIndex("WinnerUid");

                    b.HasIndex("Uid", "Id", "DepartmentUid", "LevelUid", "CreatedOn");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Sponsoring", b =>
                {
                    b.Property<long>("SponsorUid")
                        .HasColumnType("bigint");

                    b.Property<long>("SponsoredUid")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("SponsorUid", "SponsoredUid");

                    b.HasIndex("SponsoredUid");

                    b.ToTable("Sponsorings");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Tag", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Uid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Uid", "Id", "CreatedOn");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.User", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anonymous")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CompanyUid")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("DepartmentUid")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("UserType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.HasKey("Uid");

                    b.HasIndex("CompanyUid");

                    b.HasIndex("DepartmentUid");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Uid", "Id", "CompanyUid", "DepartmentUid", "CreatedOn");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Agreement", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.DeliveryMode", "Delivery")
                        .WithMany()
                        .HasForeignKey("DeliveryModeUid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sheaft.Domain.Models.Company", "Store")
                        .WithMany()
                        .HasForeignKey("StoreUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Sheaft.Domain.Models.TimeSlotHour", "SelectedHours", b1 =>
                        {
                            b1.Property<long>("AgreementUid")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Day")
                                .HasColumnType("int");

                            b1.Property<TimeSpan>("From")
                                .HasColumnType("time");

                            b1.Property<TimeSpan>("To")
                                .HasColumnType("time");

                            b1.HasKey("AgreementUid", "Id");

                            b1.ToTable("AgreementSelectedHours");

                            b1.WithOwner()
                                .HasForeignKey("AgreementUid");
                        });
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Company", b =>
                {
                    b.OwnsOne("Sheaft.Domain.Models.Address", "Address", b1 =>
                        {
                            b1.Property<long>("CompanyUid")
                                .HasColumnType("bigint");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long?>("DepartmentUid")
                                .HasColumnType("bigint");

                            b1.Property<double?>("Latitude")
                                .HasColumnType("float");

                            b1.Property<string>("Line1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double?>("Longitude")
                                .HasColumnType("float");

                            b1.Property<string>("Zipcode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CompanyUid");

                            b1.HasIndex("DepartmentUid");

                            b1.ToTable("CompanyAddresses");

                            b1.WithOwner()
                                .HasForeignKey("CompanyUid");

                            b1.HasOne("Sheaft.Domain.Models.Department", "Department")
                                .WithMany()
                                .HasForeignKey("DepartmentUid");
                        });

                    b.OwnsMany("Sheaft.Domain.Models.TimeSlotHour", "OpeningHours", b1 =>
                        {
                            b1.Property<long>("CompanyUid")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Day")
                                .HasColumnType("int");

                            b1.Property<TimeSpan>("From")
                                .HasColumnType("time");

                            b1.Property<TimeSpan>("To")
                                .HasColumnType("time");

                            b1.HasKey("CompanyUid", "Id");

                            b1.ToTable("CompanyOpeningHours");

                            b1.WithOwner()
                                .HasForeignKey("CompanyUid");
                        });
                });

            modelBuilder.Entity("Sheaft.Domain.Models.CompanyTag", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.Company", null)
                        .WithMany("Tags")
                        .HasForeignKey("CompanyUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sheaft.Domain.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.Models.DeliveryMode", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.Company", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Sheaft.Domain.Models.SimpleAddress", "Address", b1 =>
                        {
                            b1.Property<long>("DeliveryModeUid")
                                .HasColumnType("bigint");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double?>("Latitude")
                                .HasColumnType("float");

                            b1.Property<string>("Line1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double?>("Longitude")
                                .HasColumnType("float");

                            b1.Property<string>("Zipcode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DeliveryModeUid");

                            b1.ToTable("DeliveryAddresses");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryModeUid");
                        });

                    b.OwnsMany("Sheaft.Domain.Models.TimeSlotHour", "OpeningHours", b1 =>
                        {
                            b1.Property<long>("DeliveryModeUid")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Day")
                                .HasColumnType("int");

                            b1.Property<TimeSpan>("From")
                                .HasColumnType("time");

                            b1.Property<TimeSpan>("To")
                                .HasColumnType("time");

                            b1.HasKey("DeliveryModeUid", "Id");

                            b1.ToTable("DeliveryOpeningHours");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryModeUid");
                        });
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Department", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelUid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sheaft.Domain.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Job", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Notification", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.Company", "Group")
                        .WithMany()
                        .HasForeignKey("GroupUid")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Sheaft.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserUid")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Packaging", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.Company", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Product", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.Packaging", "Packaging")
                        .WithMany()
                        .HasForeignKey("PackagingUid")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Sheaft.Domain.Models.Company", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.Models.ProductTag", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.Product", null)
                        .WithMany("Tags")
                        .HasForeignKey("ProductUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sheaft.Domain.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.Models.PurchaseOrder", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.PurchaseOrderSender", "Sender")
                        .WithOne()
                        .HasForeignKey("Sheaft.Domain.Models.PurchaseOrder", "PurchaseOrderSenderUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sheaft.Domain.Models.PurchaseOrderVendor", "Vendor")
                        .WithOne()
                        .HasForeignKey("Sheaft.Domain.Models.PurchaseOrder", "PurchaseOrderVendorUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Sheaft.Domain.Models.ExpectedDelivery", "ExpectedDelivery", b1 =>
                        {
                            b1.Property<long>("PurchaseOrderUid")
                                .HasColumnType("bigint");

                            b1.Property<DateTimeOffset?>("DeliveredOn")
                                .HasColumnType("datetimeoffset");

                            b1.Property<DateTimeOffset?>("DeliveryStartedOn")
                                .HasColumnType("datetimeoffset");

                            b1.Property<DateTimeOffset>("ExpectedDeliveryDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<TimeSpan>("From")
                                .HasColumnType("time");

                            b1.Property<int>("Kind")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<TimeSpan>("To")
                                .HasColumnType("time");

                            b1.HasKey("PurchaseOrderUid");

                            b1.ToTable("ExpectedDeliveries");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseOrderUid");

                            b1.OwnsOne("Sheaft.Domain.Models.SimpleAddress", "Address", b2 =>
                                {
                                    b2.Property<long>("ExpectedDeliveryPurchaseOrderUid")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("City")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<double?>("Latitude")
                                        .HasColumnType("float");

                                    b2.Property<string>("Line1")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Line2")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<double?>("Longitude")
                                        .HasColumnType("float");

                                    b2.Property<string>("Zipcode")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ExpectedDeliveryPurchaseOrderUid");

                                    b2.ToTable("ExpectedDeliveryAddresses");

                                    b2.WithOwner()
                                        .HasForeignKey("ExpectedDeliveryPurchaseOrderUid");
                                });
                        });
                });

            modelBuilder.Entity("Sheaft.Domain.Models.PurchaseOrderProduct", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.PurchaseOrder", null)
                        .WithMany("Products")
                        .HasForeignKey("PurchaseOrderUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.Models.QuickOrder", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.Models.QuickOrderProduct", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductUid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sheaft.Domain.Models.QuickOrder", null)
                        .WithMany("Products")
                        .HasForeignKey("QuickOrderUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Rating", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.Product", null)
                        .WithMany("Ratings")
                        .HasForeignKey("ProductUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sheaft.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserUid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Reward", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentUid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sheaft.Domain.Models.Level", null)
                        .WithMany("Rewards")
                        .HasForeignKey("LevelUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sheaft.Domain.Models.User", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerUid");
                });

            modelBuilder.Entity("Sheaft.Domain.Models.Sponsoring", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.User", "Sponsor")
                        .WithMany()
                        .HasForeignKey("SponsorUid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sheaft.Domain.Models.User", "Sponsored")
                        .WithMany()
                        .HasForeignKey("SponsoredUid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Sheaft.Domain.Models.User", b =>
                {
                    b.HasOne("Sheaft.Domain.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyUid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sheaft.Domain.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentUid")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.OwnsMany("Sheaft.Domain.Models.UserPoints", "Points", b1 =>
                        {
                            b1.Property<long>("Uid")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTimeOffset>("CreatedOn")
                                .HasColumnType("datetimeoffset");

                            b1.Property<int>("Kind")
                                .HasColumnType("int");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int");

                            b1.Property<long>("UserUid")
                                .HasColumnType("bigint");

                            b1.HasKey("Uid");

                            b1.HasIndex("UserUid");

                            b1.ToTable("UserPoints");

                            b1.WithOwner()
                                .HasForeignKey("UserUid");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
