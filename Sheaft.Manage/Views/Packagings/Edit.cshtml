@model PackagingViewModel
@{
    ViewData["Title"] = "Packaging details";
    var vats = new List<SelectListItem> {
        new SelectListItem("5.5%", "5.5"),
        new SelectListItem("10%", "10"),
        new SelectListItem("20%", "20"),
    };

}

    <div class="container">
        <h2 class="display-4">Packaging details @(Model.RemovedOn.HasValue ? "(removed)":"")</h2>
        <br />

        @using (Html.BeginForm("Edit", "Packagings", FormMethod.Post, new { @class = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <br />

            <div class="form-group">
                @Html.LabelFor(m => m.Name)
                @Html.TextBoxFor(m => m.Name, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.WholeSalePrice)
                @Html.TextBoxFor(m => m.WholeSalePrice, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Vat)
                @Html.DropDownListFor(c => c.Vat, vats, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.VatPrice)
                @Html.TextBoxFor(m => m.VatPrice, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.OnSalePrice)
                @Html.TextBoxFor(m => m.OnSalePrice, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description)
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CreatedOn)
                @Html.TextBoxFor(m => m.CreatedOn, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.UpdatedOn)
                @Html.TextBoxFor(m => m.UpdatedOn, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
            @if (Model.RemovedOn.HasValue)
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.RemovedOn)
                    @Html.TextBoxFor(m => m.RemovedOn, null, new { @class = "form-control", @disabled = "disabled" })
                </div>
            }

            <br />
            <a asp-controller="Packagings" asp-action="Index" class="btn btn-light">
                Cancel
            </a>
            <button type="submit" class="btn btn-success">
                <i class="fa fa-check">&nbsp;Save</i>
            </button>
        }

    </div>
