@model BusinessViewModel
@{
    ViewData["Title"] = "Business details";
    var kinds = new List<SelectListItem>
{
        new SelectListItem("Store", ((int)ProfileKind.Store).ToString()),
        new SelectListItem("Producer", ((int)ProfileKind.Producer).ToString())
    };

    var availableTags = ((List<TagViewModel>)ViewBag.Tags).Select(c => new SelectListItem(c.Name, c.Id.ToString("D"))).ToList();
}

    <div class="container">
        <h2 class="display-4">Business details @(Model.RemovedOn.HasValue ? "(removed)":"")</h2>
        <br />

        @using (Html.BeginForm("Edit", "Companies", FormMethod.Post, new { @class = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <br />

            <div class="form-group">
                @Html.LabelFor(c => c.Name, new { @class = "form-label" })
                @Html.TextBoxFor(c => c.Name, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Kind, new { @class = "form-label" })
                @Html.DropDownListFor(c => c.Kind, kinds, new { @class = "form-control", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Email, new { @class = "form-label" })
                @Html.TextBoxFor(c => c.Email, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Phone, new { @class = "form-label" })
                @Html.TextBoxFor(c => c.Phone, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Siret, new { @class = "form-label" })
                @Html.TextBoxFor(c => c.Siret, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.VatIdentifier, new { @class = "form-label" })
                @Html.TextBoxFor(c => c.VatIdentifier, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Tags, new { @class = "form-label" })
                @Html.ListBoxFor(c => c.Tags, availableTags, new { @class = "form-control", @style = "height:12rem;" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Picture, new { @class = "form-label" })
                @if (!string.IsNullOrWhiteSpace(Model.Picture))
                {
                    <img src="@Model.Picture" height="100" />
                }
                @Html.TextBoxFor(c => c.Picture, new { @class = "form-control", @type = "file" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Description, new { @class = "form-label" })
                @Html.TextAreaFor(c => c.Description, new { @class = "form-control" })
            </div>
            <div class="form-check">
                @Html.CheckBoxFor(m => m.OpenForNewBusiness, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.OpenForNewBusiness, new { @class = "form-check-label" })
            </div>
            <br />
            <h4>Address</h4>
            <div class="form-group">
                @Html.LabelFor(c => c.Address.Line1, new { @class = "form-label" })
                @Html.TextBoxFor(c => c.Address.Line1, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Address.Line2, new { @class = "form-label" })
                @Html.TextBoxFor(c => c.Address.Line2, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Address.Zipcode, new { @class = "form-label" })
                @Html.TextBoxFor(c => c.Address.Zipcode, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Address.City, new { @class = "form-label" })
                @Html.TextBoxFor(c => c.Address.City, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Address.Latitude, new { @class = "form-label" })
                @Html.TextBoxFor(c => c.Address.Latitude, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Address.Longitude, new { @class = "form-label" })
                @Html.TextBoxFor(c => c.Address.Longitude, null, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CreatedOn)
                @Html.TextBoxFor(m => m.CreatedOn, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.UpdatedOn)
                @Html.TextBoxFor(m => m.UpdatedOn, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
            @if (Model.RemovedOn.HasValue)
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.RemovedOn)
                    @Html.TextBoxFor(m => m.RemovedOn, null, new { @class = "form-control", @disabled = "disabled" })
                </div>
            }

            <br />
            <a asp-controller="Companies" asp-action="Index" class="btn btn-light">
                Cancel
            </a>
            <button type="submit" class="btn btn-success">
                <i class="fa fa-check">&nbsp;Save</i>
            </button>
        }

    </div>
