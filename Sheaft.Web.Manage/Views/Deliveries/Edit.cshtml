@using Sheaft.Domain.Enum
@using Sheaft.Domain.Extensions
@model DeliveryViewModel
@{
    ViewData["Title"] = "Delivery details";
}
<div class="container">
<h2 class="display-4 d-inline">Delivery details</h2>
<div class="clearfix"></div>
<br/>
@using (Html.BeginForm("GenerateForm", "Deliveries", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
{
    <button type="submit" class="btn btn-info">
        <i class="fa fa-print"></i> Form
    </button>
}
@using (Html.BeginForm("GenerateReceipt", "Deliveries", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
{
    <button type="submit" class="btn btn-info">
        <i class="fa fa-print"></i> Receipt
    </button>
}
@if (Model.Status == DeliveryStatus.Ready || Model.Status == DeliveryStatus.InProgress || Model.Status == DeliveryStatus.Waiting)
{
@using (Html.BeginForm("Skip", "Deliveries", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
{
    <button type="submit" class="btn btn-info">
        <i class="fa fa-arrow-alt-circle-right"></i> Skip
    </button>
}
}
@if (Model.Status == DeliveryStatus.Ready)
{
@using (Html.BeginForm("Start", "Deliveries", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
{
    <button type="submit" class="btn btn-info">
        <i class="fa fa-check"></i> Start
    </button>
}
}
@if (Model.Status == DeliveryStatus.InProgress)
{
@using (Html.BeginForm("Complete", "Deliveries", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
{
    <button type="submit" class="btn btn-info">
        <i class="fa fa-check"></i> Complete
    </button>
}
}
<br/>
@using (Html.BeginForm("Edit", "Deliveries", FormMethod.Post, new {@class = "form"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    @Html.HiddenFor(model => model.Id)
    <br/>
    <div class="form-group">
        @Html.LabelFor(m => m.Reference)
        @Html.TextBox("Reference", Model.Reference.AsDeliveryIdentifier(), null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Status)
        @Html.TextBoxFor(m => m.Status, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Client)
        @Html.TextBoxFor(m => m.Client, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Producer)
        @Html.TextBoxFor(m => m.Producer, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CreatedOn)
        @Html.TextBoxFor(m => m.CreatedOn, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.UpdatedOn)
        @Html.TextBoxFor(m => m.UpdatedOn, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ScheduledOn)
        @Html.TextBoxFor(m => m.ScheduledOn, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.StartedOn)
        @Html.TextBoxFor(m => m.StartedOn, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Position)
        @Html.TextBoxFor(m => m.Position, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DeliveryReceiptUrl)
        @Html.TextBoxFor(m => m.DeliveryReceiptUrl, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DeliveryFormUrl)
        @Html.TextBoxFor(m => m.DeliveryFormUrl, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <h2>Address</h2>
    <div class="form-group">
        @Html.LabelFor(m => m.Address.Line1)
        @Html.TextBoxFor(m => m.Address.Line1, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Address.Line2)
        @Html.TextBoxFor(m => m.Address.Line2, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Address.Zipcode)
        @Html.TextBoxFor(m => m.Address.Zipcode, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Address.City)
        @Html.TextBoxFor(m => m.Address.City, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <br/>
    <h2>PurchaseOrders</h2>
    <table class="table table-striped table-dark">
        <thead>
        <tr>
            <td>Reference</td>
            <td>CreatedOn</td>
            <td>Status</td>
            <td>ExpectedDeliveryOn</td>
            <td>ProductsCount</td>
            <td>TotalWholeSalePrice</td>
            <td></td>
        </tr>
        </thead>
        <tbody>
        @if (Model.PurchaseOrders.Any())
        {
            @foreach (var purchaseOrder in Model.PurchaseOrders)
            {
                <tr>
                    <td>@purchaseOrder.Reference.AsPurchaseOrderIdentifier()</td>
                    <td>@purchaseOrder.CreatedOn</td>
                    <td>@purchaseOrder.Status</td>
                    <td>@purchaseOrder.ExpectedDelivery.ExpectedDeliveryDate</td>
                    <td>@purchaseOrder.ProductsCount</td>
                    <td>@purchaseOrder.TotalWholeSalePrice</td>
                    <td>
                        <a asp-controller="PurchaseOrders" asp-action="Edit" asp-route-id="@purchaseOrder.Id" class="btn btn-light">
                            <i class="fa fa-eye"></i>
                        </a>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
    <br/>
    <h2>Products to deliver</h2>
    <table class="table table-striped table-dark">
        <thead>
        <tr>
            <td>Reference</td>
            <td>Name</td>
            <td>UnitProductWholeSalePrice</td>
            <td>Quantity</td>
            <td>TotalProductWholeSalePrice</td>
            <td>TotalReturnableWholeSalePrice</td>
            <td></td>
        </tr>
        </thead>
        <tbody>
        @if (Model.Products.Any(p => p.RowKind == ModificationKind.ToDeliver))
        {
            @foreach (var product in Model.Products.Where(p => p.RowKind == ModificationKind.ToDeliver))
            {
                <tr>
                    <td>@product.Reference</td>
                    <td>@product.Name</td>
                    <td>@product.UnitWholeSalePrice</td>
                    <td>@product.Quantity</td>
                    <td>@product.TotalProductWholeSalePrice</td>
                    <td>@(product.TotalReturnableWholeSalePrice ?? 0)</td>
                    <td>
                        <a asp-controller="Products" asp-action="Edit" asp-route-id="@product.ProductId" class="btn btn-light">
                            <i class="fa fa-eye"></i>
                        </a>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
    <br/>
    <h2>Returnables to deliver</h2>
    <table class="table table-striped table-dark">
        <thead>
        <tr>
            <td>Name</td>
            <td>WholeSalePrice</td>
            <td>Quantity</td>
            <td>TotalWholeSalePrice</td>
            <td></td>
        </tr>
        </thead>
        <tbody>
        @if (Model.Products.Any(p => p.RowKind == ModificationKind.ToDeliver && p.HasReturnable))
        {
            @foreach (var product in Model.Products.Where(p => p.RowKind == ModificationKind.ToDeliver && p.HasReturnable))
            {
                <tr>
                    <td>@product.ReturnableName</td>
                    <td>@product.ReturnableWholeSalePrice</td>
                    <td>@product.Quantity</td>
                    <td>@product.TotalReturnableWholeSalePrice</td>
                    <td>
                        <a asp-controller="Returnables" asp-action="Edit" asp-route-id="@product.ReturnableId" class="btn btn-light">
                            <i class="fa fa-eye"></i>
                        </a>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
    <br/>
    <h2>Reception</h2>
    <div class="form-group">
        @Html.LabelFor(m => m.DeliveredOn)
        @Html.TextBoxFor(m => m.DeliveredOn, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ReceptionedBy)
        @Html.TextBoxFor(m => m.ReceptionedBy, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Comment)
        @Html.TextBoxFor(m => m.Comment, null, new {@class = "form-control", @disabled = "disabled"})
    </div>
    <h2>Products diffs</h2>
    <table class="table table-striped table-dark">
        <thead>
        <tr>
            <td>Kind</td>
            <td>Reference</td>
            <td>Name</td>
            <td>UnitWholeSalePrice</td>
            <td>Quantity</td>
            <td>TotalProductWholeSalePrice</td>
            <td>TotalReturnableWholeSalePrice</td>
            <td></td>
        </tr>
        </thead>
        <tbody>
        @if (Model.Products.Any(p => p.RowKind != ModificationKind.ToDeliver))
        {
            @foreach (var product in Model.Products.Where(p => p.RowKind != ModificationKind.ToDeliver))
            {
                <tr>
                    <td>@product.RowKind</td>
                    <td>@product.Reference</td>
                    <td>@product.Name</td>
                    <td>@product.UnitWholeSalePrice</td>
                    <td>@product.Quantity</td>
                    <td>@product.TotalProductWholeSalePrice</td>
                    <td>@(product.TotalReturnableWholeSalePrice ?? 0)</td>
                    <td>
                        <a asp-controller="Products" asp-action="Edit" asp-route-id="@product.ProductId" class="btn btn-light">
                            <i class="fa fa-eye"></i>
                        </a>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
    <br/>
    <h2>Returned returnables</h2>
    <table class="table table-striped table-dark">
        <thead>
        <tr>
            <td>Name</td>
            <td>UnitWholeSalePrice</td>
            <td>Quantity</td>
            <td>TotalWholeSalePrice</td>
            <td></td>
        </tr>
        </thead>
        <tbody>
        @if (Model.ReturnedReturnables != null)
        {
            @foreach (var returnable in Model.ReturnedReturnables)
            {
                <tr>
                    <td>@returnable.Name</td>
                    <td>@returnable.UnitWholeSalePrice</td>
                    <td>@returnable.Quantity</td>
                    <td>@returnable.TotalWholeSalePrice</td>
                    <td>
                        <a asp-controller="Returnables" asp-action="Edit" asp-route-id="@returnable.ReturnableId" class="btn btn-light">
                            <i class="fa fa-eye"></i>
                        </a>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
    <br/>
    <a asp-controller="Deliveries" asp-action="Index" class="btn btn-light">
        Cancel
    </a>
    <button type="submit" class="btn btn-success">
        <i class="fa fa-check">&nbsp;Save</i>
    </button>
}
</div>