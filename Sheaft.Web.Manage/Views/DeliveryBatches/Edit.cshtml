@using Sheaft.Domain.Enum
@using Sheaft.Domain.Extensions
@model DeliveryBatchViewModel
@{
    ViewData["Title"] = "DeliveryBatch details";
}
<div class="container">
    <h2 class="display-4 d-inline">DeliveryBatch details</h2>
    <div class="clearfix"></div>
    <br/>
    @using (Html.BeginForm("GenerateForms", "DeliveryBatches", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
    {
        <button type="submit" class="btn btn-info">
            <i class="fa fa-print"></i> Forms
        </button>
    }
    @if (Model.Status == DeliveryBatchStatus.Ready)
    {
@using (Html.BeginForm("Start", "DeliveryBatches", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
{
    <button type="submit" class="btn btn-info">
        <i class="fa fa-check"></i> Start
    </button>
}
    }
    @if (Model.Status == DeliveryBatchStatus.InProgress)
    {
@using (Html.BeginForm("Complete", "DeliveryBatches", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
{
    <button type="submit" class="btn btn-info">
        <i class="fa fa-check"></i> Complete
    </button>
}
    }
    <br/>
    @using (Html.BeginForm("Edit", "DeliveryBatches", FormMethod.Post, new {@class = "form"}))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)
        <br/>
        <div class="form-group">
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Status)
            @Html.TextBoxFor(m => m.Status, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CreatedOn)
            @Html.TextBoxFor(m => m.CreatedOn, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.UpdatedOn)
            @Html.TextBoxFor(m => m.UpdatedOn, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ScheduledOn)
            @Html.TextBoxFor(m => m.ScheduledOn, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.StartedOn)
            @Html.TextBoxFor(m => m.StartedOn, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CompletedOn)
            @Html.TextBoxFor(m => m.CompletedOn, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CancelledOn)
            @Html.TextBoxFor(m => m.CancelledOn, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Reason)
            @Html.TextBoxFor(m => m.Reason, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.DeliveryFormsUrl)
            @Html.TextBoxFor(m => m.DeliveryFormsUrl, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <h2>Deliveries</h2>
        <table class="table table-striped table-dark">
            <thead>
            <tr>
                <td>Position</td>
                <td>Reference</td>
                <td>Status</td>
                <td>ScheduledOn</td>
                <td>DeliveredOn</td>
                <td>PurchaseOrdersCount</td>
                <td>ProductsToDeliverCount</td>
                <td></td>
            </tr>
            </thead>
            <tbody>
            @if (Model.Deliveries.Any())
            {
                @foreach (var delivery in Model.Deliveries.OrderBy(d => d.Position))
                {
                    <tr>
                        <td>@delivery.Position</td>
                        <td>@delivery.Reference.AsDeliveryIdentifier()</td>
                        <td>@delivery.Status</td>
                        <td>@delivery.ScheduledOn</td>
                        <td>@delivery.DeliveredOn</td>
                        <td>@delivery.PurchaseOrdersCount</td>
                        <td>@delivery.ProductsToDeliverCount</td>
                        <td>
                            <a asp-controller="Deliveries" asp-action="Edit" asp-route-id="@delivery.Id" class="btn btn-light">
                                <i class="fa fa-eye"></i>
                            </a>
                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
        <br/>
        <a asp-controller="DeliveryBatches" asp-action="Index" class="btn btn-light">
            Cancel
        </a>
        <button type="submit" class="btn btn-success">
            <i class="fa fa-check">&nbsp;Save</i>
        </button>
    }
</div>