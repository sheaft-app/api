@using Sheaft.Domain.Enum
@model BusinessLegalViewModel
@{
    ViewData["Title"] = "Edit Business Legal";
    var countries = ((List<CountryViewModel>)ViewBag.Countries).Select(c => new SelectListItem(c.Name, c.Code)).ToList();
    var nationalities = ((List<NationalityViewModel>)ViewBag.Nationalities).Select(c => new SelectListItem(c.Name, c.Code)).ToList();
    var documents = (List<DocumentShortViewModel>)ViewBag.Documents;

    var kinds = new List<SelectListItem> {
        new SelectListItem("Business", LegalKind.Business.ToString("G")),
        new SelectListItem("Individual", LegalKind.Individual.ToString("G")),
        new SelectListItem("Organization", LegalKind.Organization.ToString("G"))
    };

    var validations = new List<SelectListItem> {
        new SelectListItem("NotSpecified", LegalValidation.NotSpecified.ToString("G")),
        new SelectListItem("Light", LegalValidation.Light.ToString("G")),
        new SelectListItem("Regular", LegalValidation.Regular.ToString("G"))
    };

    var uboCount = Model.Declaration?.Ubos?.Count() ?? 0;
}

<div class="container">
    <h2 class="display-4">Edit Business Legal</h2>
    <br />

    @using (Html.BeginForm("EditLegalBusiness", "Legals", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Owner.Id)
        @Html.HiddenFor(model => model.Declaration.Id)
        <br />

        <div class="row">
            <div class="col-md-6">
                <h3>Company</h3>
                <div class="form-group">
                    @Html.LabelFor(m => m.Name, "Raison sociale")
                    @Html.TextBoxFor(m => m.Name, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Kind)
                    @Html.DropDownListFor(m => m.Kind, kinds, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Validation)
                    @Html.DropDownListFor(m => m.Validation, validations, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Siret)
                    @Html.TextBoxFor(m => m.Siret, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.VatIdentifier)
                    @Html.TextBoxFor(m => m.VatIdentifier, null, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-6">
                <h4>Address</h4>
                <div class="form-group">
                    @Html.LabelFor(m => m.Address.Line1)
                    @Html.TextBoxFor(m => m.Address.Line1, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Address.Line2)
                    @Html.TextBoxFor(m => m.Address.Line2, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Address.Zipcode)
                    @Html.TextBoxFor(m => m.Address.Zipcode, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Address.City)
                    @Html.TextBoxFor(m => m.Address.City, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Address.Country)
                    @Html.DropDownListFor(m => m.Address.Country, countries, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <br />
        <br />
        <div class="row">
            <div class="col-md-6">
                <h3>Owner</h3>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.FirstName)
                    @Html.TextBoxFor(m => m.Owner.FirstName, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.LastName)
                    @Html.TextBoxFor(m => m.Owner.LastName, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Email)
                    @Html.TextBoxFor(m => m.Owner.Email, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.BirthDate)
                    @Html.TextBoxFor(m => m.Owner.BirthDate, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Nationality)
                    @Html.DropDownListFor(m => m.Owner.Nationality, nationalities, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.CountryOfResidence)
                    @Html.DropDownListFor(m => m.Owner.CountryOfResidence, countries, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-6">
                <h4>Address</h4>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Address.Line1)
                    @Html.TextBoxFor(m => m.Owner.Address.Line1, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Address.Line2)
                    @Html.TextBoxFor(m => m.Owner.Address.Line2, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Address.Zipcode)
                    @Html.TextBoxFor(m => m.Owner.Address.Zipcode, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Address.City)
                    @Html.TextBoxFor(m => m.Owner.Address.City, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Address.Country)
                    @Html.DropDownListFor(m => m.Owner.Address.Country, countries, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CreatedOn)
            @Html.TextBoxFor(m => m.CreatedOn, null, new { @class = "form-control", @disabled = "disabled" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.UpdatedOn)
            @Html.TextBoxFor(m => m.UpdatedOn, null, new { @class = "form-control", @disabled = "disabled" })
        </div>
        @if (Model.RemovedOn.HasValue)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.RemovedOn)
                @Html.TextBoxFor(m => m.RemovedOn, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
        }
        <a asp-controller="Users" asp-action="Edit" asp-route-id="@Model.Owner.Id" class="btn btn-light">
            Cancel
        </a>
        <button type="submit" class="btn btn-success">
            <i class="fa fa-check">&nbsp;Save</i>
        </button>
        <br />
    }

    <br />
    @if (Model.Kind == LegalKind.Business)
    {
        <h3>UBO Declaration</h3>
        @if (Model.Declaration != null)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.Declaration.Status)
                @Html.TextBoxFor(m => m.Declaration.Status, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Declaration.ReasonCode)
                @Html.TextBoxFor(m => m.Declaration.ReasonCode, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Declaration.ReasonMessage)
                @Html.TextBoxFor(m => m.Declaration.ReasonMessage, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
            <div class="form-group">
                @Html.Label("ubos", "Ubos")
                @Html.TextBox("ubos", uboCount, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
            <a asp-controller="Declarations" asp-action="Edit" asp-route-id="@Model.Declaration.Id" class="btn btn-info">
                Edit declaration
            </a>
        }
        else
        {
            <a asp-controller="Declarations" asp-action="Create" asp-route-legalid="@Model.Id" class="btn btn-info">
                Create declaration
            </a>
        }
    }
    <br />
    <br />
    <h3>Documents</h3>
    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Kind</th>
                <th scope="col">Status</th>
                <th scope="col">
                    <a asp-controller="Documents" asp-action="Create" asp-route-legalid="@Model.Id" class="btn btn-info">
                        <i class="fa fa-plus"></i>
                    </a>
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Documents != null)
            {
                @foreach (var document in Model.Documents)
                {
                    <tr>
                        <td scope="row">@document.Name</td>
                        <td>@document.Kind</td>
                        <td>@document.Status</td>
                        <td>
                            <a asp-controller="Documents" asp-action="Edit" asp-route-id="@document.Id" class="btn btn-info">
                                <i class="fa fa-pencil-alt"></i>
                            </a>

                            @using (Html.BeginForm("Download", "Documents", new { id = document.Id }, FormMethod.Post, true, new { @class = "form d-inline" }))
                            {
                                <button type="submit" class="btn btn-info">
                                    <i class="fa fa-download"></i>
                                </button>
                            }

                            @if (document.Status == DocumentStatus.Created || document.Status == DocumentStatus.Refused)
                            {
                                @using (Html.BeginForm("Delete", "Documents", new { id = document.Id }, FormMethod.Post, true, new { @class = "form d-inline" }))
                                {
                                    <button type="submit" class="btn btn-danger">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                }
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <br />

</div>
