@model ConsumerLegalViewModel
@{
    ViewData["Title"] = "Consumer Legals";
    var countries = ((List<CountryViewModel>)ViewBag.Countries).Select(c => new SelectListItem(c.Name, c.Alpha2)).ToList();
    var nationalities = ((List<NationalityViewModel>)ViewBag.Nationalities).Select(c => new SelectListItem(c.Name, c.Alpha2)).ToList();

    var validations = new List<SelectListItem> {
        new SelectListItem("NotSpecified", LegalValidation.NotSpecified.ToString("G")),
        new SelectListItem("Light", LegalValidation.Light.ToString("G")),
        new SelectListItem("Regular", LegalValidation.Regular.ToString("G"))
    };
}

<div class="container">
    <h2 class="display-4">Consumer Legals</h2>
    <br />

    @using (Html.BeginForm("EditLegalConsumer", "Legals", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Owner.Id)
        <br />

        <div class="row">
            <div class="col-md-6">
                <h4>Information</h4>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.FirstName)
                    @Html.TextBoxFor(m => m.Owner.FirstName, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.LastName)
                    @Html.TextBoxFor(m => m.Owner.LastName, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Email)
                    @Html.TextBoxFor(m => m.Owner.Email, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.BirthDate)
                    @Html.TextBoxFor(m => m.Owner.BirthDate, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Nationality)
                    @Html.DropDownListFor(m => m.Owner.Nationality, nationalities, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.CountryOfResidence)
                    @Html.DropDownListFor(m => m.Owner.CountryOfResidence, countries, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-6">
                <h4>Address</h4>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Address.Line1)
                    @Html.TextBoxFor(m => m.Owner.Address.Line1, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Address.Line2)
                    @Html.TextBoxFor(m => m.Owner.Address.Line2, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Address.Zipcode)
                    @Html.TextBoxFor(m => m.Owner.Address.Zipcode, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Address.City)
                    @Html.TextBoxFor(m => m.Owner.Address.City, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Owner.Address.Country)
                    @Html.DropDownListFor(m => m.Owner.Address.Country, countries, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Validation)
            @Html.DropDownListFor(m => m.Validation, validations, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CreatedOn)
            @Html.TextBoxFor(m => m.CreatedOn, null, new { @class = "form-control", @disabled = "disabled" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.UpdatedOn)
            @Html.TextBoxFor(m => m.UpdatedOn, null, new { @class = "form-control", @disabled = "disabled" })
        </div>
        @if (Model.RemovedOn.HasValue)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.RemovedOn)
                @Html.TextBoxFor(m => m.RemovedOn, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
        }
        <br />
        <a asp-controller="Consumers" asp-action="Edit" asp-route-id="@Model.Owner.Id" class="btn btn-light">
            Cancel
        </a>
        <button type="submit" class="btn btn-success">
            <i class="fa fa-check">&nbsp;Save</i>
        </button>
    }

</div>
