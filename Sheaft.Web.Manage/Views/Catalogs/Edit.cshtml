@using Sheaft.Domain.Enum
@model CatalogViewModel
@{
    ViewData["Title"] = "Catalog details";
    var kinds = new List<SelectListItem>
    {
        new SelectListItem("Consumers", CatalogKind.Consumers.ToString("G")),
        new SelectListItem("Stores", CatalogKind.Stores.ToString("G"))
    };
    var i = 0;
}

<div class="container">
    <h2 class="display-4 d-inline">Catalog details @(Model.RemovedOn.HasValue ? "(removed)" : "")</h2>
    <div class="d-inline">
        @if (Model.Kind != CatalogKind.Consumers)
        {
            @if (!Model.RemovedOn.HasValue)
            {
                @using (Html.BeginForm("Delete", "Catalogs", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
                {
                    <button type="submit" class="btn btn-danger">
                        <i class="fa fa-trash"></i>
                    </button>
                }
            }
            else
            {
                @using (Html.BeginForm("Restore", "Catalogs", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
                {
                    <button type="submit" class="btn btn-info">
                        <i class="fa fa-trash-restore"></i>
                    </button>
                }
            }
        }
    </div>
    <div class="clearfix"></div>
    <br/>

    @using (Html.BeginForm("Edit", "Catalogs", FormMethod.Post, new {@class = "form"}))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)
        <br/>

        <div class="form-group">
            @Html.LabelFor(c => c.Name, new {@class = "form-label"})
            @Html.TextBoxFor(c => c.Name, null, new {@class = "form-control"})
        </div>
        <div class="form-group">
            @Html.LabelFor(c => c.Kind, new {@class = "form-label"})
            @Html.TextBoxFor(c => c.Kind, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <div class="form-check">
            @Html.CheckBoxFor(m => m.Available, new {@class = "form-check-input"})
            @Html.LabelFor(m => m.Available, new {@class = "form-check-label"})
        </div>
        <div class="form-check">
            @if (Model.Kind == CatalogKind.Consumers)
            {
                @Html.CheckBoxFor(m => m.IsDefault, new {@class = "form-check-input", @disabled = "disabled"})
            }
            else
            {
                @Html.CheckBoxFor(m => m.IsDefault, new {@class = "form-check-input"})
            }
            @Html.LabelFor(m => m.IsDefault, new {@class = "form-check-label"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CreatedOn)
            @Html.TextBoxFor(m => m.CreatedOn, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.UpdatedOn)
            @Html.TextBoxFor(m => m.UpdatedOn, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        @if (Model.RemovedOn.HasValue)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.RemovedOn)
                @Html.TextBoxFor(m => m.RemovedOn, null, new {@class = "form-control", @disabled = "disabled"})
            </div>
        }
        <h2>Products Prices</h2>
        <table class="table table-striped table-dark">
            <thead>
            <tr>
                <td>Reference</td>
                <td>Name</td>
                <td>Price</td>
                <td>Remove</td>
            </tr>
            </thead>
            <tbody>
            @foreach (var product in Model.Products)
            {
                var id = i++;
                <tr>
                    <td>
                        @Html.HiddenFor(m => m.Products[id].Id)
                        @product.Reference
                    </td>
                    <td>@product.Name</td>
                    <td>@Html.TextBoxFor(m => m.Products[id].WholeSalePricePerUnit, null, new {@class = "form-control"})</td>
                    <td>@Html.CheckBoxFor(m => m.Products[id].Remove)</td>
                </tr>
            }
            </tbody>
        </table>
        <a asp-controller="Catalogs" asp-action="AddProducts" asp-route-id="@Model.Id" class="btn btn-primary">
            Add Products
        </a>

        <br/>
        <br/>
        <a asp-controller="Catalogs" asp-action="Index" class="btn btn-light">
            Cancel
        </a>
        <button type="submit" class="btn btn-success">
            <i class="fa fa-check">&nbsp;Save</i>
        </button>
    }

</div>