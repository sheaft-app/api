@model DeliveryModeViewModel
@{
    ViewData["Title"] = "New DeliveryMode";
    var kinds = new List<SelectListItem>
{
        new SelectListItem("Farm", ((int)DeliveryKind.Farm).ToString()),
        new SelectListItem("Market", ((int)DeliveryKind.Market).ToString()),
        new SelectListItem("Collective", ((int)DeliveryKind.Collective).ToString()),
        new SelectListItem("ProducerToStore", ((int)DeliveryKind.ProducerToStore).ToString())
    };
}

<div class="container">
    <h1 class="display-5">New DeliveryMode</h1>
    <br />

    @using (Html.BeginForm("Add", "DeliveryModes", FormMethod.Post, new { @class = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <br />
        <div class="form-group">
            @Html.LabelFor(c => c.Name, new { @class = "form-label" })
            @Html.TextBoxFor(c => c.Name, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(c => c.Kind, new { @class = "form-label" })
            @Html.DropDownListFor(c => c.Kind, kinds, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(c => c.LockOrderHoursBeforeDelivery, new { @class = "form-label" })
            @Html.TextBoxFor(c => c.LockOrderHoursBeforeDelivery, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(c => c.Description, new { @class = "form-label" })
            @Html.TextAreaFor(c => c.Description, new { @class = "form-control" })
        </div>
        <h4>Address (if Kind is ProducerToStore)</h4>
        <div class="form-group">
            @Html.LabelFor(c => c.Address.Line1, new { @class = "form-label" })
            @Html.TextBoxFor(c => c.Address.Line1, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(c => c.Address.Line2, new { @class = "form-label" })
            @Html.TextBoxFor(c => c.Address.Line2, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(c => c.Address.Zipcode, new { @class = "form-label" })
            @Html.TextBoxFor(c => c.Address.Zipcode, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(c => c.Address.City, new { @class = "form-label" })
            @Html.TextBoxFor(c => c.Address.City, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(c => c.Address.Latitude, new { @class = "form-label" })
            @Html.TextBoxFor(c => c.Address.Latitude, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(c => c.Address.Longitude, new { @class = "form-label" })
            @Html.TextBoxFor(c => c.Address.Longitude, null, new { @class = "form-control" })
        </div>
        <br />
        <a asp-controller="DeliveryModes" asp-action="Index" class="btn btn-light">
            Cancel
        </a>
        <button type="submit" class="btn btn-success">
            <i class="fa fa-plus">&nbsp;Create</i>
        </button>
    }

</div>
