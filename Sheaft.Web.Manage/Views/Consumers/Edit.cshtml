@model ConsumerViewModel
@{
    ViewData["Title"] = "Consumer details";
}

<div class="container">
    <h2 class="display-4">Consumer details @(Model.RemovedOn.HasValue ? "(removed)":"")</h2>
    <br />

    @using (Html.BeginForm("Edit", "Consumers", FormMethod.Post, new { @class = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Name)
        @Html.HiddenFor(model => model.CreatedOn)
        @Html.HiddenFor(model => model.UpdatedOn)
        @Html.HiddenFor(model => model.RemovedOn)

        <br />

        <div class="form-group">
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, null, new { @class = "form-control", @disabled = "disabled" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CreatedOn)
            @Html.TextBoxFor(m => m.CreatedOn, null, new { @class = "form-control", @disabled = "disabled" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.UpdatedOn)
            @Html.TextBoxFor(m => m.UpdatedOn, null, new { @class = "form-control", @disabled = "disabled" })
        </div>
        @if (Model.RemovedOn.HasValue)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.RemovedOn)
                @Html.TextBoxFor(m => m.RemovedOn, null, new { @class = "form-control", @disabled = "disabled" })
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName)
            @Html.TextBoxFor(m => m.FirstName, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.LastName)
            @Html.TextBoxFor(m => m.LastName, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email)
            @Html.TextBoxFor(m => m.Email, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Phone)
            @Html.TextBoxFor(m => m.Phone, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(c => c.Picture, new { @class = "form-label" })
            @if (!string.IsNullOrWhiteSpace(Model.Picture))
            {
                <img src="@Model.Picture" height="40" />
            }
            @Html.TextBoxFor(c => c.Picture, new { @class = "form-control", @type = "file" })
        </div>
        <br/>
        <h4>Legals</h4>
        @if (ViewBag.LegalsId != null)
        {
            <a asp-controller="Legals" asp-action="EditLegalConsumer" asp-route-id="@ViewBag.LegalsId" class="btn btn-info">
                Legals details
            </a>
        }
        else
        {
            <a asp-controller="Legals" asp-action="CreateLegalConsumer" asp-route-userId="@Model.Id" class="btn btn-info">
                Create Legals
            </a>
        }
        <br />
        <br />
        <a asp-controller="Consumers" asp-action="Index" class="btn btn-light">
            Cancel
        </a>
        <button type="submit" class="btn btn-success">
            <i class="fa fa-check">&nbsp;Save</i>
        </button>
    }

</div>
