@using Sheaft.Domain.Enum
@model AgreementViewModel
@{
    ViewData["Title"] = "Agreement details";

    var kinds = new List<SelectListItem>
    {
        new SelectListItem("WaitingForProducerApproval", ((int) AgreementStatus.WaitingForProducerApproval).ToString()),
        new SelectListItem("WaitingForStoreApproval", ((int) AgreementStatus.WaitingForStoreApproval).ToString()),
        new SelectListItem("Accepted", ((int) AgreementStatus.Accepted).ToString()),
        new SelectListItem("Cancelled", ((int) AgreementStatus.Cancelled).ToString()),
        new SelectListItem("Refused", ((int) AgreementStatus.Refused).ToString())
    };

    List<SelectListItem> deliveries = ViewBag.Deliveries;
    List<SelectListItem> catalogs = ViewBag.Catalogs;
}
<div class="container">
    <h2 class="display-4 d-inline">Agreement details @(Model.RemovedOn.HasValue ? "(removed)" : "")</h2>
    <div class="d-inline">
        @if (!Model.RemovedOn.HasValue)
        {
            @using (Html.BeginForm("Delete", "Agreements", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
            {
                <button type="submit" class="btn btn-danger">
                    <i class="fa fa-trash"></i>
                </button>
            }
        }
        else
        {
            @using (Html.BeginForm("Restore", "Agreements", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
            {
                <button type="submit" class="btn btn-info">
                    <i class="fa fa-trash-restore"></i>
                </button>
            }
        }
        @using (Html.BeginForm("Reset", "Agreements", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
        {
            <button type="submit" class="btn btn-info">
                <i class="fa fa-refresh"></i> Reset
            </button>
        }
    </div>
    <div class="clearfix"></div>
    <br/>
    @using (Html.BeginForm("Edit", "Agreements", FormMethod.Post, new {@class = "form"}))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)
        <br/>
        <div class="form-group">
            @Html.LabelFor(m => m.Status)
            @if (Model.Status == AgreementStatus.WaitingForProducerApproval || Model.Status == AgreementStatus.WaitingForStoreApproval)
            {
                @Html.DropDownListFor(m => m.Status, kinds, new {@class = "form-control"})
            }
            else
            {
                @Html.TextBoxFor(m => m.Status, null, new {@class = "form-control", @disabled = "disabled"})
            }
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CreatedOn)
            @Html.TextBoxFor(m => m.CreatedOn, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.UpdatedOn)
            @Html.TextBoxFor(m => m.UpdatedOn, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        @if (Model.RemovedOn.HasValue)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.RemovedOn)
                @Html.TextBoxFor(m => m.RemovedOn, null, new {@class = "form-control", @disabled = "disabled"})
            </div>
        }
        <h4>Producer</h4>
        <div class="form-group">
            @Html.LabelFor(m => m.Producer.Name)
            @Html.TextBoxFor(m => m.Producer.Name, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <h4>Store</h4>
        <div class="form-group">
            @Html.LabelFor(m => m.Store.Name)
            @Html.TextBoxFor(m => m.Store.Name, null, new {@class = "form-control", @disabled = "disabled"})
        </div>
        <h4>Delivery</h4>
        <div class="form-group">
            @Html.LabelFor(m => m.DeliveryMode.Name)
            @Html.DropDownListFor(m => m.DeliveryModeId, deliveries, null, new {@class = "form-control"})
        </div>
        <h4>Catalog</h4>
        <div class="form-group">
            @Html.LabelFor(m => m.Catalog.Name)
            @Html.DropDownListFor(m => m.CatalogId, catalogs, null, new {@class = "form-control"})
        </div>

        <br/>
        <a asp-controller="Agreements" asp-action="Index" class="btn btn-light">
            Cancel
        </a>
        <button type="submit" class="btn btn-success">
            <i class="fa fa-check">&nbsp;Save</i>
        </button>
    }
</div>