@model StoreViewModel
@{
    ViewData["Title"] = "Store details";

    var availableTags = ((List<TagViewModel>) ViewBag.Tags).Select(c => new SelectListItem(c.Name, c.Id.ToString("D"))).ToList();
}

<div class="container">
    <h2 class="display-4">Store details @(Model.RemovedOn.HasValue ? "(removed)" : "")</h2>
    <div class="d-inline">
        @if (!Model.RemovedOn.HasValue)
        {
            @using (Html.BeginForm("Delete", "Stores", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
            {
                <button type="submit" class="btn btn-danger">
                    <i class="fa fa-trash"></i>
                </button>
            }
        }
        else
        {
            @using (Html.BeginForm("Restore", "Stores", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
            {
                <button type="submit" class="btn btn-info">
                    <i class="fa fa-trash-restore"></i>
                </button>
            }
        }
    </div>
    <div class="clearfix"></div>
    <br/>

    @using (Html.BeginForm("Edit", "Stores", FormMethod.Post, new {@class = "form", enctype = "multipart/form-data"}))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Kind)
        <br/>

        <div class="row">
            <div class="col-md-6">
                <h4>Information</h4>
                <div class="form-group">
                    @Html.LabelFor(c => c.Name, "Nom commercial", new {@class = "form-label"})
                    @Html.TextBoxFor(c => c.Name, null, new {@class = "form-control"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.FirstName, new {@class = "form-label"})
                    @Html.TextBoxFor(c => c.FirstName, null, new {@class = "form-control"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.LastName, new {@class = "form-label"})
                    @Html.TextBoxFor(c => c.LastName, null, new {@class = "form-control"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.CreatedOn)
                    @Html.TextBoxFor(m => m.CreatedOn, null, new {@class = "form-control", @disabled = "disabled"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UpdatedOn)
                    @Html.TextBoxFor(m => m.UpdatedOn, null, new {@class = "form-control", @disabled = "disabled"})
                </div>
                @if (Model.RemovedOn.HasValue)
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.RemovedOn)
                        @Html.TextBoxFor(m => m.RemovedOn, null, new {@class = "form-control", @disabled = "disabled"})
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(c => c.Email, new {@class = "form-label"})
                    @Html.TextBoxFor(c => c.Email, null, new {@class = "form-control"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Phone, new {@class = "form-label"})
                    @Html.TextBoxFor(c => c.Phone, null, new {@class = "form-control"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Tags, new {@class = "form-label"})
                    @Html.ListBoxFor(c => c.Tags, availableTags, new {@class = "form-control", @style = "height:12rem;"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Picture, new {@class = "form-label"})
                    @if (!string.IsNullOrWhiteSpace(Model.Picture))
                    {
                        <img src="@Model.Picture" height="40"/>
                    }
                    @Html.TextBoxFor(c => c.Picture, new {@class = "form-control", @type = "file"})
                </div>
                <div class="form-check">
                    @Html.CheckBoxFor(m => m.OpenForNewBusiness, new {@class = "form-check-input"})
                    @Html.LabelFor(m => m.OpenForNewBusiness, new {@class = "form-check-label"})
                </div>
            </div>
            <div class="col-md-6">
                <h4>Address</h4>
                <div class="form-group">
                    @Html.LabelFor(c => c.Address.Line1, new {@class = "form-label"})
                    @Html.TextBoxFor(c => c.Address.Line1, null, new {@class = "form-control"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Address.Line2, new {@class = "form-label"})
                    @Html.TextBoxFor(c => c.Address.Line2, null, new {@class = "form-control"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Address.Zipcode, new {@class = "form-label"})
                    @Html.TextBoxFor(c => c.Address.Zipcode, null, new {@class = "form-control"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Address.City, new {@class = "form-label"})
                    @Html.TextBoxFor(c => c.Address.City, null, new {@class = "form-control"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Address.Latitude, new {@class = "form-label"})
                    @Html.TextBoxFor(c => c.Address.Latitude, null, new {@class = "form-control"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Address.Longitude, new {@class = "form-label"})
                    @Html.TextBoxFor(c => c.Address.Longitude, null, new {@class = "form-control"})
                </div>
            </div>
        </div>
        <br/>
        <h4>Legals</h4>
        @if (ViewBag.LegalsId != null)
        {
            <a asp-controller="Legals" asp-action="EditLegalBusiness" asp-route-id="@ViewBag.LegalsId" class="btn btn-info">
                Legals details
            </a>
        }
        else
        {
            <a asp-controller="Legals" asp-action="CreateLegalBusiness" asp-route-userId="@Model.Id" class="btn btn-info">
                Create Legals
            </a>
        }
        <br/>
        <br/>
        <a asp-controller="Stores" asp-action="Index" class="btn btn-light">
            Cancel
        </a>
        <button type="submit" class="btn btn-success">
            <i class="fa fa-check">&nbsp;Save</i>
        </button>
    }
    <br/>
    <h4>Settings</h4>
    <table class="table table-hover">
        <thead class="thead-dark">
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Kind</th>
            <th scope="col">Value</th>
            <th scope="col">
                <a asp-controller="Users" asp-action="AddSetting" asp-route-userId="@Model.Id" class="btn btn-info">
                    <i class="fa fa-plus"></i>
                </a>
            </th>
        </tr>
        </thead>
        <tbody>
        @if (Model.Settings != null && Model.Settings.Any())
        {
            @foreach (var setting in Model.Settings)
            {
                <tr>
                    <td scope="row">@setting.Name</td>
                    <td>@setting.Kind</td>
                    <td>@setting.Value</td>
                    <td>
                        <a asp-controller="Users" asp-action="EditSetting" asp-route-settingId="@setting.Id" asp-route-userId="@Model.Id" class="btn btn-info">
                            <i class="fa fa-pencil-alt "></i>
                        </a>
                        @using (Html.BeginForm("RemoveSetting", "Users", new {userId = Model.Id, settingId = setting.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
                        {
                            <button type="submit" class="btn btn-danger">
                                <i class="fa fa-trash"></i>
                            </button>
                        }
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>

</div>