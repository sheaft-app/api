@model ProducerViewModel
@{
    ViewData["Title"] = "Producer details";
    var availableTags = ((List<TagViewModel>)ViewBag.Tags).Select(c => new SelectListItem(c.Name, c.Id.ToString("D"))).ToList();
}

<div class="container">
    <h2 class="display-4">Producer details @(Model.RemovedOn.HasValue ? "(removed)":"")</h2>
    <br />

    @using (Html.BeginForm("Edit", "Producers", FormMethod.Post, new { @class = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Kind)
        <br />

        <div class="row">
            <div class="col-md-6">
                <h4>Information</h4>
                <div class="form-group">
                    @Html.LabelFor(c => c.Name, new { @class = "form-label" })
                    @Html.TextBoxFor(c => c.Name, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.FirstName, new { @class = "form-label" })
                    @Html.TextBoxFor(c => c.FirstName, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.LastName, new { @class = "form-label" })
                    @Html.TextBoxFor(c => c.LastName, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.CreatedOn)
                    @Html.TextBoxFor(m => m.CreatedOn, null, new { @class = "form-control", @disabled = "disabled" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UpdatedOn)
                    @Html.TextBoxFor(m => m.UpdatedOn, null, new { @class = "form-control", @disabled = "disabled" })
                </div>
                @if (Model.RemovedOn.HasValue)
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.RemovedOn)
                        @Html.TextBoxFor(m => m.RemovedOn, null, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(c => c.Email, new { @class = "form-label" })
                    @Html.TextBoxFor(c => c.Email, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Phone, new { @class = "form-label" })
                    @Html.TextBoxFor(c => c.Phone, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Picture, new { @class = "form-label" })
                    @if (!string.IsNullOrWhiteSpace(Model.Picture))
                    {
                        <img src="@Model.Picture" height="40" />
                    }
                    @Html.TextBoxFor(c => c.Picture, new { @class = "form-control", @type = "file" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Description, new { @class = "form-label" })
                    @Html.TextAreaFor(c => c.Description, new { @class = "form-control" })
                </div>
                <div class="form-check">
                    @Html.CheckBoxFor(m => m.OpenForNewBusiness, new { @class = "form-check-input" })
                    @Html.LabelFor(m => m.OpenForNewBusiness, new { @class = "form-check-label" })
                </div>
                <div class="form-check">
                    @Html.CheckBoxFor(m => m.NotSubjectToVat, new { @class = "form-check-input" })
                    @Html.LabelFor(m => m.NotSubjectToVat, new { @class = "form-check-label" })
                </div>
            </div>
            <div class="col-md-6">
                <h4>Address</h4>
                <div class="form-group">
                    @Html.LabelFor(c => c.Address.Line1, new { @class = "form-label" })
                    @Html.TextBoxFor(c => c.Address.Line1, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Address.Line2, new { @class = "form-label" })
                    @Html.TextBoxFor(c => c.Address.Line2, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Address.Zipcode, new { @class = "form-label" })
                    @Html.TextBoxFor(c => c.Address.Zipcode, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Address.City, new { @class = "form-label" })
                    @Html.TextBoxFor(c => c.Address.City, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Address.Latitude, new { @class = "form-label" })
                    @Html.TextBoxFor(c => c.Address.Latitude, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(c => c.Address.Longitude, new { @class = "form-label" })
                    @Html.TextBoxFor(c => c.Address.Longitude, null, new { @class = "form-control" })
                </div>
                <br />
                <h4>Legals</h4>
                @if (ViewBag.LegalsId != null)
                {
                    <a asp-controller="Producers" asp-action="UpdateLegal" asp-route-legalId="@ViewBag.LegalsId" class="btn btn-info">
                        Legals details
                    </a>
                }
                else
                {
                    <a asp-controller="Producers" asp-action="CreateLegals" asp-route-userId="@Model.Id" class="btn btn-info">
                        Create Legals
                    </a>
                }
                <br />
                <br />
                <h4>BankAccount</h4>
                @if (ViewBag.BankAccountId != null)
                {
                    <a asp-controller="Producers" asp-action="UpdateBankAccount" asp-route-bankAccountId="@ViewBag.BankAccountId" class="btn btn-info">
                        Bank Account details
                    </a>
                }
                else
                {
                    <a asp-controller="Producers" asp-action="CreateBankAccount" asp-route-userId="@Model.Id" class="btn btn-info">
                        Create Bank Account
                    </a>
                }
            </div>
        </div>
        <br />
        <a asp-controller="Producers" asp-action="Index" class="btn btn-light">
            Cancel
        </a>
        <button type="submit" class="btn btn-success">
            <i class="fa fa-check">&nbsp;Save</i>
        </button>
    }

</div>
