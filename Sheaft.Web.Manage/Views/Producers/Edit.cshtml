@model ProducerViewModel
@{
    ViewData["Title"] = "Producer details";
    var availableTags = ((List<TagViewModel>) ViewBag.Tags).Select(c => new SelectListItem(c.Name, c.Id.ToString("D"))).ToList();
    Model.Closings ??= new List<ClosingViewModel>();
    Model.Closings.Add(new ClosingViewModel());

    Model.Pictures = Model.Pictures?.OrderBy(p => p.Position).ToList();
}

<div class="container">
<h2 class="display-4 d-inline">Producer details @(Model.RemovedOn.HasValue ? "(removed)" : "")</h2>
<div class="d-inline">
    @if (!Model.RemovedOn.HasValue)
    {
        @using (Html.BeginForm("Delete", "Producers", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
        {
            <button type="submit" class="btn btn-danger">
                <i class="fa fa-trash"></i>
            </button>
        }
    }
    else
    {
        @using (Html.BeginForm("Restore", "Producers", new {id = Model.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
        {
            <button type="submit" class="btn btn-info">
                <i class="fa fa-trash-restore"></i>
            </button>
        }
    }
</div>
<div class="clearfix"></div>
<br/>

@using (Html.BeginForm("Edit", "Producers", FormMethod.Post, new {@class = "form", enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Kind)
    <br/>

    <div class="row">
        <div class="col-md-6">
            <h4>Information</h4>
            <div class="form-group">
                @Html.LabelFor(c => c.Name, "Nom commercial", new {@class = "form-label"})
                @Html.TextBoxFor(c => c.Name, null, new {@class = "form-control"})
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.FirstName, new {@class = "form-label"})
                @Html.TextBoxFor(c => c.FirstName, null, new {@class = "form-control"})
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.LastName, new {@class = "form-label"})
                @Html.TextBoxFor(c => c.LastName, null, new {@class = "form-control"})
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CreatedOn)
                @Html.TextBoxFor(m => m.CreatedOn, null, new {@class = "form-control", @disabled = "disabled"})
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.UpdatedOn)
                @Html.TextBoxFor(m => m.UpdatedOn, null, new {@class = "form-control", @disabled = "disabled"})
            </div>
            @if (Model.RemovedOn.HasValue)
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.RemovedOn)
                    @Html.TextBoxFor(m => m.RemovedOn, null, new {@class = "form-control", @disabled = "disabled"})
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(c => c.Email, new {@class = "form-label"})
                @Html.TextBoxFor(c => c.Email, null, new {@class = "form-control"})
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Phone, new {@class = "form-label"})
                @Html.TextBoxFor(c => c.Phone, null, new {@class = "form-control"})
            </div>
            <div class="form-check">
                @Html.CheckBoxFor(m => m.OpenForNewBusiness, new {@class = "form-check-input"})
                @Html.LabelFor(m => m.OpenForNewBusiness, new {@class = "form-check-label"})
            </div>
            <div class="form-check">
                @Html.CheckBoxFor(m => m.NotSubjectToVat, new {@class = "form-check-input"})
                @Html.LabelFor(m => m.NotSubjectToVat, new {@class = "form-check-label"})
            </div>
        </div>
        <div class="col-md-6">
            <h4>Address</h4>
            <div class="form-group">
                @Html.LabelFor(c => c.Address.Line1, new {@class = "form-label"})
                @Html.TextBoxFor(c => c.Address.Line1, null, new {@class = "form-control"})
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Address.Line2, new {@class = "form-label"})
                @Html.TextBoxFor(c => c.Address.Line2, null, new {@class = "form-control"})
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Address.Zipcode, new {@class = "form-label"})
                @Html.TextBoxFor(c => c.Address.Zipcode, null, new {@class = "form-control"})
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Address.City, new {@class = "form-label"})
                @Html.TextBoxFor(c => c.Address.City, null, new {@class = "form-control"})
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Address.Latitude, new {@class = "form-label"})
                @Html.TextBoxFor(c => c.Address.Latitude, null, new {@class = "form-control"})
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Address.Longitude, new {@class = "form-label"})
                @Html.TextBoxFor(c => c.Address.Longitude, null, new {@class = "form-control"})
            </div>
            <br/>

            <h4>Legals</h4>
            @if (ViewBag.LegalsId != null)
            {
                <a asp-controller="Legals" asp-action="EditLegalBusiness" asp-route-id="@ViewBag.LegalsId" class="btn btn-info">
                    Legals details
                </a>
            }
            else
            {
                <a asp-controller="Legals" asp-action="CreateLegalBusiness" asp-route-userId="@Model.Id" class="btn btn-info">
                    Create Legals
                </a>
            }
            <br/>
            <br/>
            <h4>BankAccount</h4>
            @if (ViewBag.BankAccountId != null)
            {
                <a asp-controller="BankAccounts" asp-action="Edit" asp-route-id="@ViewBag.BankAccountId" class="btn btn-info">
                    Bank Account details
                </a>
            }
            else
            {
                <a asp-controller="BankAccounts" asp-action="Create" asp-route-userId="@Model.Id" class="btn btn-info">
                    Create Bank Account
                </a>
            }
        </div>
    </div>

    <h2>Images</h2>
    <table class="table table-striped table-dark">
        <thead>
        <tr>
            <td>Image</td>
            <td>Position</td>
            <td>Remove</td>
        </tr>
        </thead>
        <tbody>
        @if (Model.Pictures != null)
        {
            var i = 0;
            @foreach (var picture in Model.Pictures)
            {
                var id = i++;
                <tr>
                    <td>
                        @Html.HiddenFor(m => m.Pictures[id].Id)
                        @Html.HiddenFor(m => m.Pictures[id].Url)
                        <img src="@picture.Url" height="120"/>
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.Pictures[id].Position, null, new {@class = "form-control"})
                    </td>
                    <td>@Html.CheckBoxFor(m => m.Pictures[id].Remove)</td>
                </tr>
            }
        }
        </tbody>
    </table>

    <h3>Nouvelles images</h3>
    <div class="form-group">
        @Html.TextBox("newPictures", null, new {@class = "form-control", @type = "file", @multiple = ""})
    </div>
    <br/>
    <h2>Closings</h2>
    <table class="table table-striped table-dark">
        <thead>
        <tr>
            <td>From</td>
            <td>To</td>
            <td>Reason</td>
            <td>Remove</td>
            <td></td>
        </tr>
        </thead>
        <tbody>
        @if (Model.Closings.Any())
        {
            var i = 0;
            @foreach (var closing in Model.Closings)
            {
                <tr>
                    <td>
                        @Html.HiddenFor(m => m.Closings[i].Id)
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Closings[i].ClosedFrom, null, new {@class = "form-control", @type = "datetime"})
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Closings[i].ClosedTo, null, new {@class = "form-control", @type = "datetime"})
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Closings[i].Reason, null, new {@class = "form-control"})
                        </div>
                    </td>
                    <td>
                        @if (Model.Closings[i].Id.HasValue)
                        {
                            @Html.CheckBoxFor(m => m.Closings[i].Remove)
                        }
                    </td>
                </tr>

                i++;
            }
        }
        </tbody>
    </table>
    <br/>
    <br/>
    <a asp-controller="Producers" asp-action="Index" class="btn btn-light">
        Cancel
    </a>
    <button type="submit" class="btn btn-success">
        <i class="fa fa-check">&nbsp;Save</i>
    </button>
}

<br/>
<h4>Settings</h4>
<table class="table table-hover">
    <thead class="thead-dark">
    <tr>
        <th scope="col">Name</th>
        <th scope="col">Kind</th>
        <th scope="col">Value</th>
        <th scope="col">
            <a asp-controller="Users" asp-action="AddSetting" asp-route-userId="@Model.Id" class="btn btn-info">
                <i class="fa fa-plus"></i>
            </a>
        </th>
    </tr>
    </thead>
    <tbody>
    @if (Model.Settings != null && Model.Settings.Any())
    {
        @foreach (var setting in Model.Settings)
        {
            <tr>
                <td scope="row">@setting.Name</td>
                <td>@setting.Kind</td>
                <td>@setting.Value</td>
                <td>
                    <a asp-controller="Users" asp-action="EditSetting" asp-route-settingId="@setting.Id" asp-route-userId="@Model.Id" class="btn btn-info">
                        <i class="fa fa-pencil-alt "></i>
                    </a>
                    @using (Html.BeginForm("RemoveSetting", "Users", new {userId = Model.Id, settingId = setting.Id}, FormMethod.Post, true, new {@class = "form d-inline"}))
                    {
                        <button type="submit" class="btn btn-danger">
                            <i class="fa fa-trash"></i>
                        </button>
                    }
                </td>
            </tr>
        }
    }
    </tbody>
</table>

</div>