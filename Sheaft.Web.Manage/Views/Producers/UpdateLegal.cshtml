@model BusinessLegalViewModel
@{
    ViewData["Title"] = "Producer legal details";
    var countries = ((List<CountryViewModel>)ViewBag.Countries).Select(c => new SelectListItem(c.Name, c.Alpha2)).ToList();
    var nationalities = ((List<NationalityViewModel>)ViewBag.Nationalities).Select(c => new SelectListItem(c.Name, c.Alpha2)).ToList();
    var documents = (List<DocumentShortViewModel>)ViewBag.Documents;

    var kinds = new List<SelectListItem> {
        new SelectListItem("Business", LegalKind.Business.ToString("G")),
        new SelectListItem("Individual", LegalKind.Individual.ToString("G")),
        new SelectListItem("Organization", LegalKind.Organization.ToString("G"))
    };
}

<div class="container">
    <h2 class="display-4">Producer legal details</h2>
    <br />

    @using (Html.BeginForm("UpdateLegal", "Producers", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Owner.Id)
        @Html.HiddenFor(model => model.UboDeclaration.Id)
        <br />

        <h3>Company</h3>
        <div class="form-group">
            @Html.LabelFor(m => m.Email)
            @Html.TextBoxFor(m => m.Email, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Kind)
            @Html.DropDownListFor(m => m.Kind, kinds, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Siret)
            @Html.TextBoxFor(m => m.Siret, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.VatIdentifier)
            @Html.TextBoxFor(m => m.VatIdentifier, null, new { @class = "form-control" })
        </div>
        <h4>Address</h4>
        <div class="form-group">
            @Html.LabelFor(m => m.Address.Line1)
            @Html.TextBoxFor(m => m.Address.Line1, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Address.Line2)
            @Html.TextBoxFor(m => m.Address.Line2, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Address.Zipcode)
            @Html.TextBoxFor(m => m.Address.Zipcode, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Address.City)
            @Html.TextBoxFor(m => m.Address.City, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Address.Country)
            @Html.DropDownListFor(m => m.Address.Country, countries, new { @class = "form-control" })
        </div>
        <h3>Owner</h3>
        <div class="form-group">
            @Html.LabelFor(m => m.Owner.FirstName)
            @Html.TextBoxFor(m => m.Owner.FirstName, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Owner.LastName)
            @Html.TextBoxFor(m => m.Owner.LastName, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Owner.Email)
            @Html.TextBoxFor(m => m.Owner.Email, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Owner.BirthDate)
            @Html.TextBoxFor(m => m.Owner.BirthDate, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Owner.Nationality)
            @Html.DropDownListFor(m => m.Owner.Nationality, nationalities, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Owner.CountryOfResidence)
            @Html.DropDownListFor(m => m.Owner.CountryOfResidence, countries, new { @class = "form-control" })
        </div>
        <h4>Address</h4>
        <div class="form-group">
            @Html.LabelFor(m => m.Owner.Address.Line1)
            @Html.TextBoxFor(m => m.Owner.Address.Line1, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Owner.Address.Line2)
            @Html.TextBoxFor(m => m.Owner.Address.Line2, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Owner.Address.Zipcode)
            @Html.TextBoxFor(m => m.Owner.Address.Zipcode, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Owner.Address.City)
            @Html.TextBoxFor(m => m.Owner.Address.City, null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Owner.Address.Country)
            @Html.DropDownListFor(m => m.Owner.Address.Country, countries, new { @class = "form-control" })
        </div>

        @if (Model.Kind == LegalKind.Business)
        {
            <h3>UBO Declaration</h3>
            @if (Model.UboDeclaration != null)
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.UboDeclaration.Status)
                    @Html.TextBoxFor(m => m.UboDeclaration.Status, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UboDeclaration.ReasonCode)
                    @Html.TextBoxFor(m => m.UboDeclaration.ReasonCode, null, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UboDeclaration.ReasonMessage)
                    @Html.TextBoxFor(m => m.UboDeclaration.ReasonMessage, null, new { @class = "form-control" })
                </div>
            }
            else
            {

            }
        }
        <h3>Documents</h3>
        <table class="table table-hover">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Kind</th>
                    <th scope="col">Status</th>
                    <th scope="col">
                        <a asp-controller="Documents" asp-action="Create" asp-route-legalid="@Model.Id" class="btn btn-info">
                            <i class="fa fa-plus"></i>
                        </a>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var document in documents)
                {
                    <tr>
                        <th scope="row">@document.Name</th>
                        <td>@document.Kind</td>
                        <td>@document.Status</td>
                        <td>
                            <a asp-controller="Documents" asp-action="Edit" asp-route-id="@document.Id" class="btn btn-info">
                                <i class="fa fa-pencil"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <br />
        <a asp-controller="Producers" asp-action="Edit" asp-route-id="@Model.Owner.Id" class="btn btn-light">
            Cancel
        </a>
        <button type="submit" class="btn btn-success">
            <i class="fa fa-check">&nbsp;Save</i>
        </button>
    }

</div>
